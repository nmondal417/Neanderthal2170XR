/*
 * Generated by Bluespec Compiler, version 2023.01-6-g034050db (build 034050db)
 * 
 * On Thu Apr 27 16:30:34 EDT 2023
 * 
 */
#include "bluesim_primitives.h"
#include "mkmulticycle.h"


/* Literal declarations */
static unsigned int const UWide_literal_69_haaaaaaaaaaaaaaaaa_arr[] = { 2863311530u,
									2863311530u,
									10u };
static tUWide const UWide_literal_69_haaaaaaaaaaaaaaaaa(69u,
							UWide_literal_69_haaaaaaaaaaaaaaaaa_arr);


/* String declarations */
static std::string const __str_literal_10("\n", 1u);
static std::string const __str_literal_26(" ALU output: %x", 15u);
static std::string const __str_literal_24(" Ctrl instr ", 12u);
static std::string const __str_literal_23(" MEM ", 5u);
static std::string const __str_literal_15(" MMIO ", 6u);
static std::string const __str_literal_13(" Potential r1: %x, Potential r2: %x", 35u);
static std::string const __str_literal_25(" Standard instr ", 16u);
static std::string const __str_literal_22(" }", 2u);
static std::string const __str_literal_18("'h%h", 4u);
static std::string const __str_literal_19(", ", 2u);
static std::string const __str_literal_4("C\t1", 3u);
static std::string const __str_literal_11("D", 1u);
static std::string const __str_literal_14("E", 1u);
static std::string const __str_literal_7("F", 1u);
static std::string const __str_literal_5("I\t%d\t%d\t%d", 10u);
static std::string const __str_literal_12("Instr bits: %x", 14u);
static std::string const __str_literal_3("Kanata\t0004\nC=\t1\n", 17u);
static std::string const __str_literal_8("L\t%d\t%d\t", 8u);
static std::string const __str_literal_16("Mem { ", 6u);
static std::string const __str_literal_9("PC : %x", 7u);
static std::string const __str_literal_28("R\t%d\t%d\t%d", 10u);
static std::string const __str_literal_6("S\t%d\t%d\t%s", 10u);
static std::string const __str_literal_27("W", 1u);
static std::string const __str_literal_20("addr: ", 6u);
static std::string const __str_literal_17("byte_en: ", 9u);
static std::string const __str_literal_21("data: ", 6u);
static std::string const __str_literal_1("output.log", 10u);
static std::string const __str_literal_2("w", 1u);


/* Constructor */
MOD_mkmulticycle::MOD_mkmulticycle(tSimStateHdl simHdl, char const *name, Module *parent)
  : Module(simHdl, name, parent),
    __clk_handle_0(BAD_CLOCK_HANDLE),
    INST_commit_id(simHdl, "commit_id", this, 48u, 0llu, (tUInt8)0u),
    INST_current_id(simHdl, "current_id", this, 48u, 0llu, (tUInt8)0u),
    INST_dInst(simHdl, "dInst", this, 40u, 8589934592llu, (tUInt8)0u),
    INST_fresh_id(simHdl, "fresh_id", this, 48u, 0llu, (tUInt8)0u),
    INST_fromDmem_rv(simHdl,
		     "fromDmem_rv",
		     this,
		     69u,
		     bs_wide_tmp(69u).set_bits_in_word(UWide_literal_69_haaaaaaaaaaaaaaaaa.get_bits_in_word8(2u,
													     0u,
													     5u),
						       2u,
						       0u,
						       5u).set_whole_word(UWide_literal_69_haaaaaaaaaaaaaaaaa.get_whole_word(1u),
									  1u).set_whole_word(UWide_literal_69_haaaaaaaaaaaaaaaaa.get_whole_word(0u),
											     0u),
		     (tUInt8)0u),
    INST_fromImem_rv(simHdl,
		     "fromImem_rv",
		     this,
		     69u,
		     bs_wide_tmp(69u).set_bits_in_word(UWide_literal_69_haaaaaaaaaaaaaaaaa.get_bits_in_word8(2u,
													     0u,
													     5u),
						       2u,
						       0u,
						       5u).set_whole_word(UWide_literal_69_haaaaaaaaaaaaaaaaa.get_whole_word(1u),
									  1u).set_whole_word(UWide_literal_69_haaaaaaaaaaaaaaaaa.get_whole_word(0u),
											     0u),
		     (tUInt8)0u),
    INST_fromMMIO_rv(simHdl,
		     "fromMMIO_rv",
		     this,
		     69u,
		     bs_wide_tmp(69u).set_bits_in_word(UWide_literal_69_haaaaaaaaaaaaaaaaa.get_bits_in_word8(2u,
													     0u,
													     5u),
						       2u,
						       0u,
						       5u).set_whole_word(UWide_literal_69_haaaaaaaaaaaaaaaaa.get_whole_word(1u),
									  1u).set_whole_word(UWide_literal_69_haaaaaaaaaaaaaaaaa.get_whole_word(0u),
											     0u),
		     (tUInt8)0u),
    INST_lfh(simHdl, "lfh", this, 32u, 0u, (tUInt8)0u),
    INST_mem_business(simHdl, "mem_business", this, 6u, (tUInt8)42u, (tUInt8)0u),
    INST_pc(simHdl, "pc", this, 32u, 0u, (tUInt8)0u),
    INST_retired(simHdl, "retired", this, 48u, 2u, (tUInt8)1u, 0u),
    INST_rf_0(simHdl, "rf_0", this, 32u, 0u, (tUInt8)0u),
    INST_rf_1(simHdl, "rf_1", this, 32u, 0u, (tUInt8)0u),
    INST_rf_10(simHdl, "rf_10", this, 32u, 0u, (tUInt8)0u),
    INST_rf_11(simHdl, "rf_11", this, 32u, 0u, (tUInt8)0u),
    INST_rf_12(simHdl, "rf_12", this, 32u, 0u, (tUInt8)0u),
    INST_rf_13(simHdl, "rf_13", this, 32u, 0u, (tUInt8)0u),
    INST_rf_14(simHdl, "rf_14", this, 32u, 0u, (tUInt8)0u),
    INST_rf_15(simHdl, "rf_15", this, 32u, 0u, (tUInt8)0u),
    INST_rf_16(simHdl, "rf_16", this, 32u, 0u, (tUInt8)0u),
    INST_rf_17(simHdl, "rf_17", this, 32u, 0u, (tUInt8)0u),
    INST_rf_18(simHdl, "rf_18", this, 32u, 0u, (tUInt8)0u),
    INST_rf_19(simHdl, "rf_19", this, 32u, 0u, (tUInt8)0u),
    INST_rf_2(simHdl, "rf_2", this, 32u, 0u, (tUInt8)0u),
    INST_rf_20(simHdl, "rf_20", this, 32u, 0u, (tUInt8)0u),
    INST_rf_21(simHdl, "rf_21", this, 32u, 0u, (tUInt8)0u),
    INST_rf_22(simHdl, "rf_22", this, 32u, 0u, (tUInt8)0u),
    INST_rf_23(simHdl, "rf_23", this, 32u, 0u, (tUInt8)0u),
    INST_rf_24(simHdl, "rf_24", this, 32u, 0u, (tUInt8)0u),
    INST_rf_25(simHdl, "rf_25", this, 32u, 0u, (tUInt8)0u),
    INST_rf_26(simHdl, "rf_26", this, 32u, 0u, (tUInt8)0u),
    INST_rf_27(simHdl, "rf_27", this, 32u, 0u, (tUInt8)0u),
    INST_rf_28(simHdl, "rf_28", this, 32u, 0u, (tUInt8)0u),
    INST_rf_29(simHdl, "rf_29", this, 32u, 0u, (tUInt8)0u),
    INST_rf_3(simHdl, "rf_3", this, 32u, 0u, (tUInt8)0u),
    INST_rf_30(simHdl, "rf_30", this, 32u, 0u, (tUInt8)0u),
    INST_rf_31(simHdl, "rf_31", this, 32u, 0u, (tUInt8)0u),
    INST_rf_4(simHdl, "rf_4", this, 32u, 0u, (tUInt8)0u),
    INST_rf_5(simHdl, "rf_5", this, 32u, 0u, (tUInt8)0u),
    INST_rf_6(simHdl, "rf_6", this, 32u, 0u, (tUInt8)0u),
    INST_rf_7(simHdl, "rf_7", this, 32u, 0u, (tUInt8)0u),
    INST_rf_8(simHdl, "rf_8", this, 32u, 0u, (tUInt8)0u),
    INST_rf_9(simHdl, "rf_9", this, 32u, 0u, (tUInt8)0u),
    INST_rv1(simHdl, "rv1", this, 32u, 0u, (tUInt8)0u),
    INST_rv2(simHdl, "rv2", this, 32u, 0u, (tUInt8)0u),
    INST_rvd(simHdl, "rvd", this, 32u, 0u, (tUInt8)0u),
    INST_squashed(simHdl, "squashed", this, 48u, 2u, (tUInt8)1u, 0u),
    INST_starting(simHdl, "starting", this, 1u, (tUInt8)1u, (tUInt8)0u),
    INST_state(simHdl, "state", this, 2u, (tUInt8)0u, (tUInt8)0u),
    INST_toDmem_rv(simHdl,
		   "toDmem_rv",
		   this,
		   69u,
		   bs_wide_tmp(69u).set_bits_in_word(UWide_literal_69_haaaaaaaaaaaaaaaaa.get_bits_in_word8(2u, 0u, 5u),
						     2u,
						     0u,
						     5u).set_whole_word(UWide_literal_69_haaaaaaaaaaaaaaaaa.get_whole_word(1u),
									1u).set_whole_word(UWide_literal_69_haaaaaaaaaaaaaaaaa.get_whole_word(0u),
											   0u),
		   (tUInt8)0u),
    INST_toImem_rv(simHdl,
		   "toImem_rv",
		   this,
		   69u,
		   bs_wide_tmp(69u).set_bits_in_word(UWide_literal_69_haaaaaaaaaaaaaaaaa.get_bits_in_word8(2u, 0u, 5u),
						     2u,
						     0u,
						     5u).set_whole_word(UWide_literal_69_haaaaaaaaaaaaaaaaa.get_whole_word(1u),
									1u).set_whole_word(UWide_literal_69_haaaaaaaaaaaaaaaaa.get_whole_word(0u),
											   0u),
		   (tUInt8)0u),
    INST_toMMIO_rv(simHdl,
		   "toMMIO_rv",
		   this,
		   69u,
		   bs_wide_tmp(69u).set_bits_in_word(UWide_literal_69_haaaaaaaaaaaaaaaaa.get_bits_in_word8(2u, 0u, 5u),
						     2u,
						     0u,
						     5u).set_whole_word(UWide_literal_69_haaaaaaaaaaaaaaaaa.get_whole_word(1u),
									1u).set_whole_word(UWide_literal_69_haaaaaaaaaaaaaaaaa.get_whole_word(0u),
											   0u),
		   (tUInt8)0u),
    PORT_RST_N((tUInt8)1u),
    DEF_toMMIO_rv_port1__read____d492(69u),
    DEF_toDmem_rv_port1__read____d488(69u),
    DEF_toImem_rv_port1__read____d484(69u),
    DEF_fromMMIO_rv_port1__read____d359(69u),
    DEF_fromMMIO_rv_port0__read____d494(69u),
    DEF_toMMIO_rv_port0__read____d242(69u),
    DEF_fromDmem_rv_port1__read____d361(69u),
    DEF_fromDmem_rv_port0__read____d490(69u),
    DEF_toDmem_rv_port0__read____d245(69u),
    DEF_fromImem_rv_port1__read____d17(69u),
    DEF_fromImem_rv_port0__read____d486(69u),
    DEF_toImem_rv_port0__read____d4(69u),
    DEF_TASK_fopen___d2(2863311530u),
    DEF__16_CONCAT_pc_5_CONCAT_0___d16(69u),
    DEF__1_CONCAT_IF_dInst_89_BIT_5_56_THEN_IF_dInst_89_ETC___d274(69u),
    DEF__1_CONCAT_getMMIOResp_a___d493(69u),
    DEF__1_CONCAT_getDResp_a___d489(69u),
    DEF__1_CONCAT_getIResp_a___d485(69u),
    DEF__0_CONCAT_DONTCARE___d22(69u)
{
  PORT_EN_getMMIOResp = false;
  PORT_EN_getMMIOReq = false;
  PORT_EN_getDResp = false;
  PORT_EN_getDReq = false;
  PORT_EN_getIResp = false;
  PORT_EN_getIReq = false;
  PORT_getMMIOResp_a.setSize(68u);
  PORT_getMMIOResp_a.clear();
  PORT_getDResp_a.setSize(68u);
  PORT_getDResp_a.clear();
  PORT_getIResp_a.setSize(68u);
  PORT_getIResp_a.clear();
  PORT_getMMIOReq.setSize(68u);
  PORT_getMMIOReq.clear();
  PORT_getDReq.setSize(68u);
  PORT_getDReq.clear();
  PORT_getIReq.setSize(68u);
  PORT_getIReq.clear();
  symbol_count = 84u;
  symbols = new tSym[symbol_count];
  init_symbols_0();
}


/* Symbol init fns */

void MOD_mkmulticycle::init_symbols_0()
{
  init_symbol(&symbols[0u], "commit_id", SYM_MODULE, &INST_commit_id);
  init_symbol(&symbols[1u], "current_id", SYM_MODULE, &INST_current_id);
  init_symbol(&symbols[2u], "dInst", SYM_MODULE, &INST_dInst);
  init_symbol(&symbols[3u], "EN_getDReq", SYM_PORT, &PORT_EN_getDReq, 1u);
  init_symbol(&symbols[4u], "EN_getDResp", SYM_PORT, &PORT_EN_getDResp, 1u);
  init_symbol(&symbols[5u], "EN_getIReq", SYM_PORT, &PORT_EN_getIReq, 1u);
  init_symbol(&symbols[6u], "EN_getIResp", SYM_PORT, &PORT_EN_getIResp, 1u);
  init_symbol(&symbols[7u], "EN_getMMIOReq", SYM_PORT, &PORT_EN_getMMIOReq, 1u);
  init_symbol(&symbols[8u], "EN_getMMIOResp", SYM_PORT, &PORT_EN_getMMIOResp, 1u);
  init_symbol(&symbols[9u], "fresh_id", SYM_MODULE, &INST_fresh_id);
  init_symbol(&symbols[10u], "fromDmem_rv", SYM_MODULE, &INST_fromDmem_rv);
  init_symbol(&symbols[11u], "fromImem_rv", SYM_MODULE, &INST_fromImem_rv);
  init_symbol(&symbols[12u], "fromMMIO_rv", SYM_MODULE, &INST_fromMMIO_rv);
  init_symbol(&symbols[13u], "getDReq", SYM_PORT, &PORT_getDReq, 68u);
  init_symbol(&symbols[14u], "getDResp_a", SYM_PORT, &PORT_getDResp_a, 68u);
  init_symbol(&symbols[15u], "getIReq", SYM_PORT, &PORT_getIReq, 68u);
  init_symbol(&symbols[16u], "getIResp_a", SYM_PORT, &PORT_getIResp_a, 68u);
  init_symbol(&symbols[17u], "getMMIOReq", SYM_PORT, &PORT_getMMIOReq, 68u);
  init_symbol(&symbols[18u], "getMMIOResp_a", SYM_PORT, &PORT_getMMIOResp_a, 68u);
  init_symbol(&symbols[19u], "imm__h8147", SYM_DEF, &DEF_imm__h8147, 32u);
  init_symbol(&symbols[20u], "lfh", SYM_MODULE, &INST_lfh);
  init_symbol(&symbols[21u], "mem_business", SYM_MODULE, &INST_mem_business);
  init_symbol(&symbols[22u], "pc", SYM_MODULE, &INST_pc);
  init_symbol(&symbols[23u], "RL_administrative_konata_commit", SYM_RULE);
  init_symbol(&symbols[24u], "RL_administrative_konata_flush", SYM_RULE);
  init_symbol(&symbols[25u], "RL_decode", SYM_RULE);
  init_symbol(&symbols[26u], "RL_do_tic_logging", SYM_RULE);
  init_symbol(&symbols[27u], "RL_execute", SYM_RULE);
  init_symbol(&symbols[28u], "RL_fetch", SYM_RULE);
  init_symbol(&symbols[29u], "RL_writeback", SYM_RULE);
  init_symbol(&symbols[30u], "retired", SYM_MODULE, &INST_retired);
  init_symbol(&symbols[31u], "rf_0", SYM_MODULE, &INST_rf_0);
  init_symbol(&symbols[32u], "rf_1", SYM_MODULE, &INST_rf_1);
  init_symbol(&symbols[33u], "rf_10", SYM_MODULE, &INST_rf_10);
  init_symbol(&symbols[34u], "rf_11", SYM_MODULE, &INST_rf_11);
  init_symbol(&symbols[35u], "rf_12", SYM_MODULE, &INST_rf_12);
  init_symbol(&symbols[36u], "rf_13", SYM_MODULE, &INST_rf_13);
  init_symbol(&symbols[37u], "rf_14", SYM_MODULE, &INST_rf_14);
  init_symbol(&symbols[38u], "rf_15", SYM_MODULE, &INST_rf_15);
  init_symbol(&symbols[39u], "rf_16", SYM_MODULE, &INST_rf_16);
  init_symbol(&symbols[40u], "rf_17", SYM_MODULE, &INST_rf_17);
  init_symbol(&symbols[41u], "rf_18", SYM_MODULE, &INST_rf_18);
  init_symbol(&symbols[42u], "rf_19", SYM_MODULE, &INST_rf_19);
  init_symbol(&symbols[43u], "rf_2", SYM_MODULE, &INST_rf_2);
  init_symbol(&symbols[44u], "rf_20", SYM_MODULE, &INST_rf_20);
  init_symbol(&symbols[45u], "rf_21", SYM_MODULE, &INST_rf_21);
  init_symbol(&symbols[46u], "rf_22", SYM_MODULE, &INST_rf_22);
  init_symbol(&symbols[47u], "rf_23", SYM_MODULE, &INST_rf_23);
  init_symbol(&symbols[48u], "rf_24", SYM_MODULE, &INST_rf_24);
  init_symbol(&symbols[49u], "rf_25", SYM_MODULE, &INST_rf_25);
  init_symbol(&symbols[50u], "rf_26", SYM_MODULE, &INST_rf_26);
  init_symbol(&symbols[51u], "rf_27", SYM_MODULE, &INST_rf_27);
  init_symbol(&symbols[52u], "rf_28", SYM_MODULE, &INST_rf_28);
  init_symbol(&symbols[53u], "rf_29", SYM_MODULE, &INST_rf_29);
  init_symbol(&symbols[54u], "rf_3", SYM_MODULE, &INST_rf_3);
  init_symbol(&symbols[55u], "rf_30", SYM_MODULE, &INST_rf_30);
  init_symbol(&symbols[56u], "rf_31", SYM_MODULE, &INST_rf_31);
  init_symbol(&symbols[57u], "rf_4", SYM_MODULE, &INST_rf_4);
  init_symbol(&symbols[58u], "rf_5", SYM_MODULE, &INST_rf_5);
  init_symbol(&symbols[59u], "rf_6", SYM_MODULE, &INST_rf_6);
  init_symbol(&symbols[60u], "rf_7", SYM_MODULE, &INST_rf_7);
  init_symbol(&symbols[61u], "rf_8", SYM_MODULE, &INST_rf_8);
  init_symbol(&symbols[62u], "rf_9", SYM_MODULE, &INST_rf_9);
  init_symbol(&symbols[63u], "rs1_val__h10070", SYM_DEF, &DEF_rs1_val__h10070, 32u);
  init_symbol(&symbols[64u], "rv1", SYM_MODULE, &INST_rv1);
  init_symbol(&symbols[65u], "rv2", SYM_MODULE, &INST_rv2);
  init_symbol(&symbols[66u], "rvd", SYM_MODULE, &INST_rvd);
  init_symbol(&symbols[67u], "squashed", SYM_MODULE, &INST_squashed);
  init_symbol(&symbols[68u], "starting", SYM_MODULE, &INST_starting);
  init_symbol(&symbols[69u], "starting__h4013", SYM_DEF, &DEF_starting__h4013, 1u);
  init_symbol(&symbols[70u], "state", SYM_MODULE, &INST_state);
  init_symbol(&symbols[71u], "toDmem_rv", SYM_MODULE, &INST_toDmem_rv);
  init_symbol(&symbols[72u], "toImem_rv", SYM_MODULE, &INST_toImem_rv);
  init_symbol(&symbols[73u], "toMMIO_rv", SYM_MODULE, &INST_toMMIO_rv);
  init_symbol(&symbols[74u], "WILL_FIRE_getDReq", SYM_DEF, &DEF_WILL_FIRE_getDReq, 1u);
  init_symbol(&symbols[75u], "WILL_FIRE_getDResp", SYM_DEF, &DEF_WILL_FIRE_getDResp, 1u);
  init_symbol(&symbols[76u], "WILL_FIRE_getIReq", SYM_DEF, &DEF_WILL_FIRE_getIReq, 1u);
  init_symbol(&symbols[77u], "WILL_FIRE_getIResp", SYM_DEF, &DEF_WILL_FIRE_getIResp, 1u);
  init_symbol(&symbols[78u], "WILL_FIRE_getMMIOReq", SYM_DEF, &DEF_WILL_FIRE_getMMIOReq, 1u);
  init_symbol(&symbols[79u], "WILL_FIRE_getMMIOResp", SYM_DEF, &DEF_WILL_FIRE_getMMIOResp, 1u);
  init_symbol(&symbols[80u], "x__h8347", SYM_DEF, &DEF_x__h8347, 12u);
  init_symbol(&symbols[81u], "x__h8394", SYM_DEF, &DEF_x__h8394, 12u);
  init_symbol(&symbols[82u], "x__h8463", SYM_DEF, &DEF_x__h8463, 13u);
  init_symbol(&symbols[83u], "x__h8624", SYM_DEF, &DEF_x__h8624, 21u);
}


/* Rule actions */

void MOD_mkmulticycle::RL_do_tic_logging()
{
  DEF_lfh___d3 = INST_lfh.METH_read();
  DEF_starting__h4013 = INST_starting.METH_read();
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_starting__h4013)
      DEF_TASK_fopen___d2 = dollar_fopen("s,s", &__str_literal_1, &__str_literal_2);
    else
      DEF_TASK_fopen___d2 = 2863311530u;
  if (DEF_starting__h4013)
    INST_lfh.METH_write(DEF_TASK_fopen___d2);
  if (!(PORT_RST_N == (tUInt8)0u))
    if (DEF_starting__h4013)
      dollar_fwrite(sim_hdl, this, "32,s", DEF_TASK_fopen___d2, &__str_literal_3);
  if (DEF_starting__h4013)
    INST_starting.METH_write((tUInt8)0u);
  if (!(PORT_RST_N == (tUInt8)0u))
    dollar_fdisplay(sim_hdl, this, "32,s", DEF_lfh___d3, &__str_literal_4);
}

void MOD_mkmulticycle::RL_fetch()
{
  tUInt64 DEF_x__h4506;
  tUInt64 DEF_v__h4492;
  DEF_signed_0___d14 = 0u;
  DEF_v__h4492 = INST_fresh_id.METH_read();
  DEF_lfh___d3 = INST_lfh.METH_read();
  DEF_pc__h10072 = INST_pc.METH_read();
  DEF_x__h4506 = 281474976710655llu & (DEF_v__h4492 + 1llu);
  DEF__16_CONCAT_pc_5_CONCAT_0___d16.set_bits_in_word((tUInt8)16u,
						      2u,
						      0u,
						      5u).set_whole_word(DEF_pc__h10072, 1u).set_whole_word(0u, 0u);
  INST_fresh_id.METH_write(DEF_x__h4506);
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    dollar_fdisplay(sim_hdl,
		    this,
		    "32,s,48,48,8",
		    DEF_lfh___d3,
		    &__str_literal_5,
		    DEF_v__h4492,
		    DEF_v__h4492,
		    (tUInt8)0u);
    dollar_fdisplay(sim_hdl,
		    this,
		    "32,s,48,-32,s",
		    DEF_lfh___d3,
		    &__str_literal_6,
		    DEF_v__h4492,
		    DEF_signed_0___d14,
		    &__str_literal_7);
    dollar_fwrite(sim_hdl,
		  this,
		  "32,s,48,-32",
		  DEF_lfh___d3,
		  &__str_literal_8,
		  DEF_v__h4492,
		  DEF_signed_0___d14);
    dollar_fwrite(sim_hdl, this, "32,s,32", DEF_lfh___d3, &__str_literal_9, DEF_pc__h10072);
    dollar_fwrite(sim_hdl, this, "32,s", DEF_lfh___d3, &__str_literal_10);
  }
  INST_current_id.METH_write(DEF_v__h4492);
  INST_toImem_rv.METH_port0__write(DEF__16_CONCAT_pc_5_CONCAT_0___d16);
  INST_state.METH_write((tUInt8)1u);
}

void MOD_mkmulticycle::RL_decode()
{
  tUInt64 DEF_IF_fromImem_rv_port1__read__7_BITS_6_TO_0_5_EQ_ETC___d149;
  tUInt8 DEF_NOT_fromImem_rv_port1__read__7_BIT_25_8___d49;
  tUInt8 DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d30;
  tUInt8 DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d31;
  tUInt8 DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d39;
  tUInt8 DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d33;
  tUInt8 DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d35;
  tUInt8 DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d42;
  tUInt8 DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d44;
  tUInt8 DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0b0___d108;
  tUInt8 DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d112;
  tUInt8 DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d122;
  tUInt8 DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d109;
  tUInt8 DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d110;
  tUInt8 DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d120;
  tUInt8 DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d111;
  tUInt8 DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d121;
  tUInt8 DEF_fromImem_rv_port1__read__7_BITS_31_TO_26_6_EQ_0b0___d47;
  tUInt8 DEF_fromImem_rv_port1__read__7_BITS_31_TO_25_1_EQ_0b0___d62;
  tUInt8 DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ_0b1___d29;
  tUInt8 DEF_fromImem_rv_port1__read__7_BITS_31_TO_25_1_EQ__ETC___d64;
  tUInt8 DEF_IF_fromImem_rv_port1__read__7_BITS_31_TO_20_3__ETC___d93;
  tUInt8 DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ_0b0___d28;
  tUInt8 DEF_IF_fromImem_rv_port1__read__7_BITS_6_TO_0_5_EQ_ETC___d99;
  tUInt8 DEF_IF_fromImem_rv_port1__read__7_BITS_14_TO_12_7__ETC___d71;
  tUInt8 DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d32;
  tUInt8 DEF_IF_fromImem_rv_port1__read__7_BITS_6_TO_0_5_EQ_ETC___d102;
  tUInt8 DEF_IF_fromImem_rv_port1__read__7_BITS_6_TO_0_5_EQ_ETC___d105;
  tUInt8 DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d107;
  tUInt8 DEF_IF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_E_ETC___d146;
  tUInt32 DEF_rs2__h6744;
  tUInt8 DEF_fromImem_rv_port1__read__7_BITS_19_TO_15_9_EQ_0b0___d90;
  tUInt32 DEF_rs1__h6743;
  tUInt8 DEF_x__h5435;
  tUInt8 DEF_x__h5967;
  tUInt8 DEF_x__h5836;
  tUInt8 DEF_x__h5521;
  tUInt8 DEF_x__h5395;
  tUInt8 DEF_x__h5724;
  tUInt32 DEF_fromImem_rv_port1__read__7_BITS_31_TO_20___d83;
  tUInt32 DEF_instr__h5111;
  tUInt32 DEF__read__h2251;
  tUInt32 DEF__read__h2282;
  tUInt32 DEF__read__h2313;
  tUInt32 DEF__read__h2344;
  tUInt32 DEF__read__h2375;
  tUInt32 DEF__read__h2406;
  tUInt32 DEF__read__h2437;
  tUInt32 DEF__read__h2468;
  tUInt32 DEF__read__h2499;
  tUInt32 DEF__read__h2530;
  tUInt32 DEF__read__h2561;
  tUInt32 DEF__read__h2592;
  tUInt32 DEF__read__h2623;
  tUInt32 DEF__read__h2654;
  tUInt32 DEF__read__h2685;
  tUInt32 DEF__read__h2716;
  tUInt32 DEF__read__h2747;
  tUInt32 DEF__read__h2778;
  tUInt32 DEF__read__h2809;
  tUInt32 DEF__read__h2840;
  tUInt32 DEF__read__h2871;
  tUInt32 DEF__read__h2902;
  tUInt32 DEF__read__h2933;
  tUInt32 DEF__read__h2964;
  tUInt32 DEF__read__h2995;
  tUInt32 DEF__read__h3026;
  tUInt32 DEF__read__h3057;
  tUInt32 DEF__read__h3088;
  tUInt32 DEF__read__h3119;
  tUInt32 DEF__read__h3150;
  tUInt32 DEF__read__h3181;
  tUInt8 DEF_rs2_idx__h6742;
  tUInt8 DEF_x__h5888;
  DEF_signed_0___d14 = 0u;
  DEF_fromImem_rv_port1__read____d17 = INST_fromImem_rv.METH_port1__read();
  DEF_x__h5888 = DEF_fromImem_rv_port1__read____d17.get_bits_in_word8(0u, 15u, 5u);
  DEF_rs2_idx__h6742 = DEF_fromImem_rv_port1__read____d17.get_bits_in_word8(0u, 20u, 5u);
  DEF_x__h10689 = INST_current_id.METH_read();
  DEF__read__h3181 = INST_rf_31.METH_read();
  DEF__read__h3150 = INST_rf_30.METH_read();
  DEF__read__h3119 = INST_rf_29.METH_read();
  DEF__read__h3088 = INST_rf_28.METH_read();
  DEF__read__h3057 = INST_rf_27.METH_read();
  DEF__read__h2995 = INST_rf_25.METH_read();
  DEF__read__h3026 = INST_rf_26.METH_read();
  DEF__read__h2964 = INST_rf_24.METH_read();
  DEF__read__h2902 = INST_rf_22.METH_read();
  DEF__read__h2933 = INST_rf_23.METH_read();
  DEF__read__h2871 = INST_rf_21.METH_read();
  DEF__read__h2809 = INST_rf_19.METH_read();
  DEF__read__h2840 = INST_rf_20.METH_read();
  DEF__read__h2778 = INST_rf_18.METH_read();
  DEF__read__h2747 = INST_rf_17.METH_read();
  DEF__read__h2716 = INST_rf_16.METH_read();
  DEF__read__h2685 = INST_rf_15.METH_read();
  DEF__read__h2654 = INST_rf_14.METH_read();
  DEF__read__h2623 = INST_rf_13.METH_read();
  DEF__read__h2592 = INST_rf_12.METH_read();
  DEF__read__h2561 = INST_rf_11.METH_read();
  DEF__read__h2530 = INST_rf_10.METH_read();
  DEF__read__h2468 = INST_rf_8.METH_read();
  DEF__read__h2499 = INST_rf_9.METH_read();
  DEF__read__h2437 = INST_rf_7.METH_read();
  DEF__read__h2406 = INST_rf_6.METH_read();
  DEF__read__h2375 = INST_rf_5.METH_read();
  DEF__read__h2344 = INST_rf_4.METH_read();
  DEF__read__h2282 = INST_rf_2.METH_read();
  DEF__read__h2313 = INST_rf_3.METH_read();
  DEF__read__h2251 = INST_rf_1.METH_read();
  DEF_instr__h5111 = DEF_fromImem_rv_port1__read____d17.get_whole_word(0u);
  DEF_lfh___d3 = INST_lfh.METH_read();
  DEF_fromImem_rv_port1__read__7_BITS_31_TO_20___d83 = DEF_fromImem_rv_port1__read____d17.get_bits_in_word32(0u,
													     20u,
													     12u);
  DEF_x__h5395 = DEF_fromImem_rv_port1__read____d17.get_bits_in_word8(0u, 0u, 7u);
  DEF_x__h5724 = DEF_fromImem_rv_port1__read____d17.get_bits_in_word8(0u, 25u, 7u);
  DEF_x__h5521 = DEF_fromImem_rv_port1__read____d17.get_bits_in_word8(0u, 26u, 6u);
  DEF_x__h5836 = DEF_fromImem_rv_port1__read____d17.get_bits_in_word8(0u, 7u, 5u);
  DEF_x__h5967 = DEF_fromImem_rv_port1__read____d17.get_bits_in_word8(0u, 2u, 5u);
  DEF_x__h5435 = DEF_fromImem_rv_port1__read____d17.get_bits_in_word8(0u, 12u, 3u);
  switch (DEF_x__h5888) {
  case (tUInt8)0u:
    DEF_rs1__h6743 = 0u;
    break;
  case (tUInt8)1u:
    DEF_rs1__h6743 = DEF__read__h2251;
    break;
  case (tUInt8)2u:
    DEF_rs1__h6743 = DEF__read__h2282;
    break;
  case (tUInt8)3u:
    DEF_rs1__h6743 = DEF__read__h2313;
    break;
  case (tUInt8)4u:
    DEF_rs1__h6743 = DEF__read__h2344;
    break;
  case (tUInt8)5u:
    DEF_rs1__h6743 = DEF__read__h2375;
    break;
  case (tUInt8)6u:
    DEF_rs1__h6743 = DEF__read__h2406;
    break;
  case (tUInt8)7u:
    DEF_rs1__h6743 = DEF__read__h2437;
    break;
  case (tUInt8)8u:
    DEF_rs1__h6743 = DEF__read__h2468;
    break;
  case (tUInt8)9u:
    DEF_rs1__h6743 = DEF__read__h2499;
    break;
  case (tUInt8)10u:
    DEF_rs1__h6743 = DEF__read__h2530;
    break;
  case (tUInt8)11u:
    DEF_rs1__h6743 = DEF__read__h2561;
    break;
  case (tUInt8)12u:
    DEF_rs1__h6743 = DEF__read__h2592;
    break;
  case (tUInt8)13u:
    DEF_rs1__h6743 = DEF__read__h2623;
    break;
  case (tUInt8)14u:
    DEF_rs1__h6743 = DEF__read__h2654;
    break;
  case (tUInt8)15u:
    DEF_rs1__h6743 = DEF__read__h2685;
    break;
  case (tUInt8)16u:
    DEF_rs1__h6743 = DEF__read__h2716;
    break;
  case (tUInt8)17u:
    DEF_rs1__h6743 = DEF__read__h2747;
    break;
  case (tUInt8)18u:
    DEF_rs1__h6743 = DEF__read__h2778;
    break;
  case (tUInt8)19u:
    DEF_rs1__h6743 = DEF__read__h2809;
    break;
  case (tUInt8)20u:
    DEF_rs1__h6743 = DEF__read__h2840;
    break;
  case (tUInt8)21u:
    DEF_rs1__h6743 = DEF__read__h2871;
    break;
  case (tUInt8)22u:
    DEF_rs1__h6743 = DEF__read__h2902;
    break;
  case (tUInt8)23u:
    DEF_rs1__h6743 = DEF__read__h2933;
    break;
  case (tUInt8)24u:
    DEF_rs1__h6743 = DEF__read__h2964;
    break;
  case (tUInt8)25u:
    DEF_rs1__h6743 = DEF__read__h2995;
    break;
  case (tUInt8)26u:
    DEF_rs1__h6743 = DEF__read__h3026;
    break;
  case (tUInt8)27u:
    DEF_rs1__h6743 = DEF__read__h3057;
    break;
  case (tUInt8)28u:
    DEF_rs1__h6743 = DEF__read__h3088;
    break;
  case (tUInt8)29u:
    DEF_rs1__h6743 = DEF__read__h3119;
    break;
  case (tUInt8)30u:
    DEF_rs1__h6743 = DEF__read__h3150;
    break;
  case (tUInt8)31u:
    DEF_rs1__h6743 = DEF__read__h3181;
    break;
  default:
    DEF_rs1__h6743 = 2863311530u;
  }
  DEF_fromImem_rv_port1__read__7_BITS_19_TO_15_9_EQ_0b0___d90 = DEF_x__h5888 == (tUInt8)0u;
  switch (DEF_x__h5967) {
  case (tUInt8)0u:
  case (tUInt8)1u:
  case (tUInt8)4u:
  case (tUInt8)6u:
  case (tUInt8)25u:
    DEF_IF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_E_ETC___d146 = (tUInt8)0u;
    break;
  case (tUInt8)5u:
  case (tUInt8)13u:
    DEF_IF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_E_ETC___d146 = (tUInt8)3u;
    break;
  case (tUInt8)8u:
  case (tUInt8)9u:
    DEF_IF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_E_ETC___d146 = (tUInt8)1u;
    break;
  case (tUInt8)24u:
    DEF_IF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_E_ETC___d146 = (tUInt8)2u;
    break;
  default:
    DEF_IF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_E_ETC___d146 = (tUInt8)4u;
  }
  switch (DEF_rs2_idx__h6742) {
  case (tUInt8)0u:
    DEF_rs2__h6744 = 0u;
    break;
  case (tUInt8)1u:
    DEF_rs2__h6744 = DEF__read__h2251;
    break;
  case (tUInt8)2u:
    DEF_rs2__h6744 = DEF__read__h2282;
    break;
  case (tUInt8)3u:
    DEF_rs2__h6744 = DEF__read__h2313;
    break;
  case (tUInt8)4u:
    DEF_rs2__h6744 = DEF__read__h2344;
    break;
  case (tUInt8)5u:
    DEF_rs2__h6744 = DEF__read__h2375;
    break;
  case (tUInt8)6u:
    DEF_rs2__h6744 = DEF__read__h2406;
    break;
  case (tUInt8)7u:
    DEF_rs2__h6744 = DEF__read__h2437;
    break;
  case (tUInt8)8u:
    DEF_rs2__h6744 = DEF__read__h2468;
    break;
  case (tUInt8)9u:
    DEF_rs2__h6744 = DEF__read__h2499;
    break;
  case (tUInt8)10u:
    DEF_rs2__h6744 = DEF__read__h2530;
    break;
  case (tUInt8)11u:
    DEF_rs2__h6744 = DEF__read__h2561;
    break;
  case (tUInt8)12u:
    DEF_rs2__h6744 = DEF__read__h2592;
    break;
  case (tUInt8)13u:
    DEF_rs2__h6744 = DEF__read__h2623;
    break;
  case (tUInt8)14u:
    DEF_rs2__h6744 = DEF__read__h2654;
    break;
  case (tUInt8)15u:
    DEF_rs2__h6744 = DEF__read__h2685;
    break;
  case (tUInt8)16u:
    DEF_rs2__h6744 = DEF__read__h2716;
    break;
  case (tUInt8)17u:
    DEF_rs2__h6744 = DEF__read__h2747;
    break;
  case (tUInt8)18u:
    DEF_rs2__h6744 = DEF__read__h2778;
    break;
  case (tUInt8)19u:
    DEF_rs2__h6744 = DEF__read__h2809;
    break;
  case (tUInt8)20u:
    DEF_rs2__h6744 = DEF__read__h2840;
    break;
  case (tUInt8)21u:
    DEF_rs2__h6744 = DEF__read__h2871;
    break;
  case (tUInt8)22u:
    DEF_rs2__h6744 = DEF__read__h2902;
    break;
  case (tUInt8)23u:
    DEF_rs2__h6744 = DEF__read__h2933;
    break;
  case (tUInt8)24u:
    DEF_rs2__h6744 = DEF__read__h2964;
    break;
  case (tUInt8)25u:
    DEF_rs2__h6744 = DEF__read__h2995;
    break;
  case (tUInt8)26u:
    DEF_rs2__h6744 = DEF__read__h3026;
    break;
  case (tUInt8)27u:
    DEF_rs2__h6744 = DEF__read__h3057;
    break;
  case (tUInt8)28u:
    DEF_rs2__h6744 = DEF__read__h3088;
    break;
  case (tUInt8)29u:
    DEF_rs2__h6744 = DEF__read__h3119;
    break;
  case (tUInt8)30u:
    DEF_rs2__h6744 = DEF__read__h3150;
    break;
  case (tUInt8)31u:
    DEF_rs2__h6744 = DEF__read__h3181;
    break;
  default:
    DEF_rs2__h6744 = 2863311530u;
  }
  DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d107 = DEF_x__h5967 == (tUInt8)24u;
  DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ_0b0___d28 = DEF_x__h5435 == (tUInt8)0u;
  switch (DEF_fromImem_rv_port1__read__7_BITS_31_TO_20___d83) {
  case 0u:
  case 1u:
  case 770u:
    DEF_IF_fromImem_rv_port1__read__7_BITS_31_TO_20_3__ETC___d93 = DEF_fromImem_rv_port1__read__7_BITS_19_TO_15_9_EQ_0b0___d90;
    break;
  default:
    DEF_IF_fromImem_rv_port1__read__7_BITS_31_TO_20_3__ETC___d93 = DEF_fromImem_rv_port1__read__7_BITS_31_TO_20___d83 == 261u && DEF_fromImem_rv_port1__read__7_BITS_19_TO_15_9_EQ_0b0___d90;
  }
  DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ_0b1___d29 = DEF_x__h5435 == (tUInt8)1u;
  DEF_fromImem_rv_port1__read__7_BITS_31_TO_25_1_EQ_0b0___d62 = DEF_x__h5724 == (tUInt8)0u;
  DEF_fromImem_rv_port1__read__7_BITS_31_TO_25_1_EQ__ETC___d64 = DEF_fromImem_rv_port1__read__7_BITS_31_TO_25_1_EQ_0b0___d62 || DEF_x__h5724 == (tUInt8)32u;
  DEF_fromImem_rv_port1__read__7_BITS_31_TO_26_6_EQ_0b0___d47 = DEF_x__h5521 == (tUInt8)0u;
  DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d121 = DEF_x__h5967 == (tUInt8)27u;
  DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d120 = DEF_x__h5967 == (tUInt8)13u;
  DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d111 = DEF_x__h5967 == (tUInt8)25u;
  DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d110 = DEF_x__h5967 == (tUInt8)12u;
  DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d109 = DEF_x__h5967 == (tUInt8)8u;
  DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d122 = DEF_x__h5967 == (tUInt8)5u;
  DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d112 = DEF_x__h5967 == (tUInt8)4u;
  DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0b0___d108 = DEF_x__h5967 == (tUInt8)0u;
  DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d44 = DEF_x__h5435 == (tUInt8)7u;
  DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d42 = DEF_x__h5435 == (tUInt8)6u;
  DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d35 = DEF_x__h5435 == (tUInt8)5u;
  DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d33 = DEF_x__h5435 == (tUInt8)4u;
  DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d31 = DEF_x__h5435 == (tUInt8)2u;
  DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d39 = DEF_x__h5435 == (tUInt8)3u;
  switch (DEF_x__h5435) {
  case (tUInt8)0u:
  case (tUInt8)5u:
    DEF_IF_fromImem_rv_port1__read__7_BITS_14_TO_12_7__ETC___d71 = DEF_fromImem_rv_port1__read__7_BITS_31_TO_25_1_EQ__ETC___d64;
    break;
  default:
    DEF_IF_fromImem_rv_port1__read__7_BITS_14_TO_12_7__ETC___d71 = (((((DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ_0b1___d29 || DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d31) || DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d39) || DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d33) || DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d42) || DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d44) && DEF_fromImem_rv_port1__read__7_BITS_31_TO_25_1_EQ_0b0___d62;
  }
  DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d30 = DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ_0b0___d28 || DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ_0b1___d29;
  DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d32 = DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d30 || DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d31;
  switch (DEF_x__h5395) {
  case (tUInt8)99u:
    DEF_IF_fromImem_rv_port1__read__7_BITS_6_TO_0_5_EQ_ETC___d99 = (((DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d30 || DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d33) || DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d35) || DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d42) || DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d44;
    break;
  case (tUInt8)103u:
    DEF_IF_fromImem_rv_port1__read__7_BITS_6_TO_0_5_EQ_ETC___d99 = DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ_0b0___d28;
    break;
  default:
    DEF_IF_fromImem_rv_port1__read__7_BITS_6_TO_0_5_EQ_ETC___d99 = DEF_x__h5395 == (tUInt8)111u || (DEF_x__h5395 == (tUInt8)115u && (DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ_0b0___d28 && (DEF_x__h5836 == (tUInt8)0u && DEF_IF_fromImem_rv_port1__read__7_BITS_31_TO_20_3__ETC___d93)));
  }
  switch (DEF_x__h5395) {
  case (tUInt8)35u:
    DEF_IF_fromImem_rv_port1__read__7_BITS_6_TO_0_5_EQ_ETC___d102 = DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d32;
    break;
  case (tUInt8)51u:
    DEF_IF_fromImem_rv_port1__read__7_BITS_6_TO_0_5_EQ_ETC___d102 = DEF_IF_fromImem_rv_port1__read__7_BITS_14_TO_12_7__ETC___d71;
    break;
  default:
    DEF_IF_fromImem_rv_port1__read__7_BITS_6_TO_0_5_EQ_ETC___d102 = DEF_x__h5395 == (tUInt8)55u || DEF_IF_fromImem_rv_port1__read__7_BITS_6_TO_0_5_EQ_ETC___d99;
  }
  DEF_NOT_fromImem_rv_port1__read__7_BIT_25_8___d49 = !DEF_fromImem_rv_port1__read____d17.get_bits_in_word8(0u,
													    25u,
													    1u);
  switch (DEF_x__h5395) {
  case (tUInt8)3u:
    DEF_IF_fromImem_rv_port1__read__7_BITS_6_TO_0_5_EQ_ETC___d105 = (DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d32 || DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d33) || DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d35;
    break;
  case (tUInt8)19u:
    DEF_IF_fromImem_rv_port1__read__7_BITS_6_TO_0_5_EQ_ETC___d105 = (((((DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ_0b0___d28 || DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d31) || DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d39) || DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d33) || DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d42) || DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d44) || (DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ_0b1___d29 ? DEF_fromImem_rv_port1__read__7_BITS_31_TO_26_6_EQ_0b0___d47 && DEF_NOT_fromImem_rv_port1__read__7_BIT_25_8___d49 : DEF_fromImem_rv_port1__read__7_BITS_14_TO_12_7_EQ__ETC___d35 && ((DEF_fromImem_rv_port1__read__7_BITS_31_TO_26_6_EQ_0b0___d47 || DEF_x__h5521 == (tUInt8)16u) && DEF_NOT_fromImem_rv_port1__read__7_BIT_25_8___d49));
    break;
  default:
    DEF_IF_fromImem_rv_port1__read__7_BITS_6_TO_0_5_EQ_ETC___d105 = DEF_x__h5395 == (tUInt8)23u || DEF_IF_fromImem_rv_port1__read__7_BITS_6_TO_0_5_EQ_ETC___d102;
  }
  DEF__0_CONCAT_DONTCARE___d22.set_bits_in_word(UWide_literal_69_haaaaaaaaaaaaaaaaa.get_bits_in_word8(2u,
												      0u,
												      5u),
						2u,
						0u,
						5u).set_whole_word(UWide_literal_69_haaaaaaaaaaaaaaaaa.get_whole_word(1u),
								   1u).set_whole_word(UWide_literal_69_haaaaaaaaaaaaaaaaa.get_whole_word(0u),
										      0u);
  DEF_IF_fromImem_rv_port1__read__7_BITS_6_TO_0_5_EQ_ETC___d149 = 1099511627775llu & (((((((((tUInt64)(DEF_IF_fromImem_rv_port1__read__7_BITS_6_TO_0_5_EQ_ETC___d105)) << 39u) | (((tUInt64)(DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d107 || (DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0b0___d108 || (DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d109 || (DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d110 || (DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d111 || DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d112)))))) << 38u)) | (((tUInt64)(DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d107 || (DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d109 || DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d110))) << 37u)) | (((tUInt64)(DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d120 || (DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d121 || (DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0b0___d108 || (DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d110 || (DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d111 || (DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d112 || DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d122))))))) << 36u)) | (((tUInt64)(((((DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0b0___d108 || DEF_x__h5967 == (tUInt8)1u) || DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d112) || DEF_x__h5967 == (tUInt8)6u) || DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d111) || ((DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d122 || DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d120) || ((DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d109 || DEF_x__h5967 == (tUInt8)9u) || (DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d107 || DEF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_EQ_0_ETC___d121))))) << 35u)) | (((tUInt64)(DEF_IF_fromImem_rv_port1__read__7_BITS_6_TO_2_06_E_ETC___d146)) << 32u)) | (tUInt64)(DEF_instr__h5111));
  INST_fromImem_rv.METH_port1__write(DEF__0_CONCAT_DONTCARE___d22);
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    dollar_fdisplay(sim_hdl,
		    this,
		    "32,s,48,-32,s",
		    DEF_lfh___d3,
		    &__str_literal_6,
		    DEF_x__h10689,
		    DEF_signed_0___d14,
		    &__str_literal_11);
    dollar_fwrite(sim_hdl,
		  this,
		  "32,s,48,-32",
		  DEF_lfh___d3,
		  &__str_literal_8,
		  DEF_x__h10689,
		  DEF_signed_0___d14);
    dollar_fwrite(sim_hdl, this, "32,s,32", DEF_lfh___d3, &__str_literal_12, DEF_instr__h5111);
    dollar_fwrite(sim_hdl, this, "32,s", DEF_lfh___d3, &__str_literal_10);
  }
  INST_dInst.METH_write(DEF_IF_fromImem_rv_port1__read__7_BITS_6_TO_0_5_EQ_ETC___d149);
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    dollar_fwrite(sim_hdl,
		  this,
		  "32,s,48,-32",
		  DEF_lfh___d3,
		  &__str_literal_8,
		  DEF_x__h10689,
		  DEF_signed_0___d14);
    dollar_fwrite(sim_hdl,
		  this,
		  "32,s,32,32",
		  DEF_lfh___d3,
		  &__str_literal_13,
		  DEF_rs1__h6743,
		  DEF_rs2__h6744);
    dollar_fwrite(sim_hdl, this, "32,s", DEF_lfh___d3, &__str_literal_10);
  }
  INST_rv1.METH_write(DEF_rs1__h6743);
  INST_rv2.METH_write(DEF_rs2__h6744);
  INST_state.METH_write((tUInt8)2u);
}

void MOD_mkmulticycle::RL_execute()
{
  tUInt8 DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d355;
  tUInt32 DEF_x__h9038;
  tUInt8 DEF_shift_amount__h8239;
  tUInt8 DEF_x__h9974;
  tUInt8 DEF_x__h9967;
  tUInt8 DEF_dInst_89_BIT_6_90_OR_NOT_dInst_89_BITS_4_TO_3__ETC___d283;
  tUInt8 DEF_dInst_89_BIT_6_90_OR_NOT_dInst_89_BITS_4_TO_3__ETC___d285;
  tUInt8 DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d255;
  tUInt8 DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d280;
  tUInt8 DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d237;
  tUInt8 DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d238;
  tUInt8 DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d239;
  tUInt8 DEF_rv1_95_ULT_rv2_70___d304;
  tUInt8 DEF_rv1_95_SLT_rv2_70___d300;
  tUInt8 DEF_rv1_95_EQ_rv2_70___d296;
  tUInt8 DEF_IF_dInst_89_BITS_13_TO_12_57_EQ_0b0_58_THEN_0b_ETC___d267;
  tUInt8 DEF_req_byte_en__h8847;
  tUInt32 DEF_x__h9039;
  tUInt32 DEF_data__h10038;
  tUInt32 DEF_v__h9423;
  tUInt8 DEF_dInst_89_BITS_6_TO_4_81_EQ_0b110___d282;
  tUInt32 DEF_nextPc__h10041;
  tUInt32 DEF_incPC__h10076;
  tUInt8 DEF_IF_dInst_89_BITS_14_TO_12_94_EQ_0b0_95_THEN_rv_ETC___d310;
  tUInt32 DEF__theResult___fst__h10259;
  tUInt32 DEF_nextPC__h10242;
  tUInt32 DEF__theResult___fst__h10239;
  tUInt32 DEF__theResult___fst__h10173;
  tUInt32 DEF_rd_val__h9816;
  tUInt32 DEF_rd_val__h9812;
  tUInt32 DEF_data__h8149;
  tUInt8 DEF_dInst_89_BIT_2___d286;
  tUInt8 DEF_dInst_89_BIT_3___d287;
  tUInt8 DEF_dInst_89_BIT_5___d256;
  tUInt8 DEF_dInst_89_BIT_30___d319;
  tUInt8 DEF_offset__h8154;
  tUInt8 DEF_size__h8152;
  tUInt8 DEF_funct3__h9814;
  tUInt32 DEF_alu_src2__h9813;
  tUInt8 DEF_shamt__h9819;
  tUInt32 DEF_rs2_val__h10071;
  DEF_signed_0___d14 = 0u;
  DEF_x__h10689 = INST_current_id.METH_read();
  DEF_dInst___d189 = INST_dInst.METH_read();
  DEF_dInst_89_BITS_11_TO_7___d206 = (tUInt8)((tUInt8)31u & (DEF_dInst___d189 >> 7u));
  DEF_dInst_89_BIT_6___d190 = (tUInt8)((tUInt8)1u & (DEF_dInst___d189 >> 6u));
  DEF_lfh___d3 = INST_lfh.METH_read();
  DEF_rs2_val__h10071 = INST_rv2.METH_read();
  DEF_rs1_val__h10070 = INST_rv1.METH_read();
  DEF_pc__h10072 = INST_pc.METH_read();
  DEF_x__h8347 = (tUInt32)(4095u & (DEF_dInst___d189 >> 20u));
  DEF_funct3__h9814 = (tUInt8)((tUInt8)7u & (DEF_dInst___d189 >> 12u));
  DEF_size__h8152 = (tUInt8)((tUInt8)3u & (DEF_dInst___d189 >> 12u));
  DEF_dInst_89_BIT_35___d196 = (tUInt8)((tUInt8)1u & (DEF_dInst___d189 >> 35u));
  DEF_dInst_89_BIT_31___d211 = (tUInt8)((tUInt8)1u & (DEF_dInst___d189 >> 31u));
  DEF_dInst_89_BIT_30___d319 = (tUInt8)((tUInt8)1u & (DEF_dInst___d189 >> 30u));
  DEF_dInst_89_BIT_5___d256 = (tUInt8)((tUInt8)1u & (DEF_dInst___d189 >> 5u));
  DEF_dInst_89_BIT_3___d287 = (tUInt8)((tUInt8)1u & (DEF_dInst___d189 >> 3u));
  DEF_dInst_89_BIT_2___d286 = (tUInt8)((tUInt8)1u & (DEF_dInst___d189 >> 2u));
  DEF_incPC__h10076 = DEF_pc__h10072 + 4u;
  DEF_dInst_89_BITS_6_TO_4_81_EQ_0b110___d282 = ((tUInt8)((tUInt8)7u & (DEF_dInst___d189 >> 4u))) == (tUInt8)6u;
  DEF_IF_dInst_89_BIT_35_96_THEN_dInst_89_BITS_34_TO_ETC___d198 = (tUInt8)((tUInt8)7u & (DEF_dInst___d189 >> 32u));
  DEF_rv1_95_EQ_rv2_70___d296 = DEF_rs1_val__h10070 == DEF_rs2_val__h10071;
  DEF_rv1_95_SLT_rv2_70___d300 = primSLT8(1u,
					  32u,
					  (tUInt32)(DEF_rs1_val__h10070),
					  32u,
					  (tUInt32)(DEF_rs2_val__h10071));
  DEF_rv1_95_ULT_rv2_70___d304 = DEF_rs1_val__h10070 < DEF_rs2_val__h10071;
  switch (DEF_funct3__h9814) {
  case (tUInt8)0u:
    DEF_IF_dInst_89_BITS_14_TO_12_94_EQ_0b0_95_THEN_rv_ETC___d310 = DEF_rv1_95_EQ_rv2_70___d296;
    break;
  case (tUInt8)1u:
    DEF_IF_dInst_89_BITS_14_TO_12_94_EQ_0b0_95_THEN_rv_ETC___d310 = !DEF_rv1_95_EQ_rv2_70___d296;
    break;
  case (tUInt8)4u:
    DEF_IF_dInst_89_BITS_14_TO_12_94_EQ_0b0_95_THEN_rv_ETC___d310 = DEF_rv1_95_SLT_rv2_70___d300;
    break;
  case (tUInt8)5u:
    DEF_IF_dInst_89_BITS_14_TO_12_94_EQ_0b0_95_THEN_rv_ETC___d310 = !DEF_rv1_95_SLT_rv2_70___d300;
    break;
  case (tUInt8)6u:
    DEF_IF_dInst_89_BITS_14_TO_12_94_EQ_0b0_95_THEN_rv_ETC___d310 = DEF_rv1_95_ULT_rv2_70___d304;
    break;
  default:
    DEF_IF_dInst_89_BITS_14_TO_12_94_EQ_0b0_95_THEN_rv_ETC___d310 = !DEF_rv1_95_ULT_rv2_70___d304;
  }
  DEF_dInst_89_BITS_4_TO_3_91_EQ_0b0___d192 = ((tUInt8)((tUInt8)3u & (DEF_dInst___d189 >> 3u))) == (tUInt8)0u;
  DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d254 = !DEF_dInst_89_BIT_6___d190 && DEF_dInst_89_BITS_4_TO_3_91_EQ_0b0___d192;
  DEF_dInst_89_BIT_6_90_OR_NOT_dInst_89_BITS_4_TO_3__ETC___d194 = DEF_dInst_89_BIT_6___d190 || !DEF_dInst_89_BITS_4_TO_3_91_EQ_0b0___d192;
  DEF_dInst_89_BIT_6_90_OR_NOT_dInst_89_BITS_4_TO_3__ETC___d285 = DEF_dInst_89_BIT_6_90_OR_NOT_dInst_89_BITS_4_TO_3__ETC___d194 && !DEF_dInst_89_BITS_6_TO_4_81_EQ_0b110___d282;
  DEF_dInst_89_BIT_6_90_OR_NOT_dInst_89_BITS_4_TO_3__ETC___d283 = DEF_dInst_89_BIT_6_90_OR_NOT_dInst_89_BITS_4_TO_3__ETC___d194 && DEF_dInst_89_BITS_6_TO_4_81_EQ_0b110___d282;
  DEF_x__h8624 = 2097151u & (((((((tUInt32)(DEF_dInst_89_BIT_31___d211)) << 20u) | (((tUInt32)((tUInt8)((tUInt8)255u & (DEF_dInst___d189 >> 12u)))) << 12u)) | (((tUInt32)((tUInt8)((tUInt8)1u & (DEF_dInst___d189 >> 20u)))) << 11u)) | (((tUInt32)(1023u & (DEF_dInst___d189 >> 21u))) << 1u)) | (tUInt32)((tUInt8)0u));
  DEF_x__h8463 = 8191u & (((((((tUInt32)(DEF_dInst_89_BIT_31___d211)) << 12u) | (((tUInt32)((tUInt8)((tUInt8)1u & (DEF_dInst___d189 >> 7u)))) << 11u)) | (((tUInt32)((tUInt8)((tUInt8)63u & (DEF_dInst___d189 >> 25u)))) << 5u)) | (((tUInt32)((tUInt8)((tUInt8)15u & (DEF_dInst___d189 >> 8u)))) << 1u)) | (tUInt32)((tUInt8)0u));
  DEF_x__h8394 = 4095u & ((((tUInt32)((tUInt8)((tUInt8)127u & (DEF_dInst___d189 >> 25u)))) << 5u) | (tUInt32)(DEF_dInst_89_BITS_11_TO_7___d206));
  DEF_imm__h8147 = DEF_dInst_89_BIT_35___d196 && DEF_IF_dInst_89_BIT_35_96_THEN_dInst_89_BITS_34_TO_ETC___d198 == (tUInt8)0u ? primSignExt32(32u,
																	     12u,
																	     (tUInt32)(DEF_x__h8347)) : (DEF_dInst_89_BIT_35___d196 && DEF_IF_dInst_89_BIT_35_96_THEN_dInst_89_BITS_34_TO_ETC___d198 == (tUInt8)1u ? primSignExt32(32u,
																																				   12u,
																																				   (tUInt32)(DEF_x__h8394)) : (DEF_dInst_89_BIT_35___d196 && DEF_IF_dInst_89_BIT_35_96_THEN_dInst_89_BITS_34_TO_ETC___d198 == (tUInt8)2u ? primSignExt32(32u,
																																																							 13u,
																																																							 (tUInt32)(DEF_x__h8463)) : (DEF_dInst_89_BIT_35___d196 && DEF_IF_dInst_89_BIT_35_96_THEN_dInst_89_BITS_34_TO_ETC___d198 == (tUInt8)3u ? ((tUInt32)(1048575u & (DEF_dInst___d189 >> 12u))) << 12u : (DEF_dInst_89_BIT_35___d196 && DEF_IF_dInst_89_BIT_35_96_THEN_dInst_89_BITS_34_TO_ETC___d198 == (tUInt8)4u ? primSignExt32(32u,
																																																																																														       21u,
																																																																																														       (tUInt32)(DEF_x__h8624)) : 0u))));
  DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d235 = DEF_rs1_val__h10070 + DEF_imm__h8147;
  DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d236 = (tUInt32)(DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d235 >> 2u);
  DEF_alu_src2__h9813 = DEF_dInst_89_BIT_5___d256 ? DEF_rs2_val__h10071 : DEF_imm__h8147;
  DEF_shamt__h9819 = (tUInt8)((tUInt8)31u & DEF_alu_src2__h9813);
  DEF_offset__h8154 = (tUInt8)((tUInt8)3u & DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d235);
  DEF_rd_val__h9812 = DEF_pc__h10072 + DEF_imm__h8147;
  DEF_nextPC__h10242 = (((tUInt32)(DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d235 >> 1u)) << 1u) | (tUInt32)((tUInt8)0u);
  DEF__theResult___fst__h10259 = DEF_IF_dInst_89_BITS_14_TO_12_94_EQ_0b0_95_THEN_rv_ETC___d310 ? DEF_rd_val__h9812 : DEF_incPC__h10076;
  DEF__theResult___fst__h10239 = DEF_dInst_89_BIT_2___d286 && !DEF_dInst_89_BIT_3___d287 ? DEF_nextPC__h10242 : DEF__theResult___fst__h10259;
  DEF__theResult___fst__h10173 = DEF_dInst_89_BIT_2___d286 && DEF_dInst_89_BIT_3___d287 ? DEF_rd_val__h9812 : DEF__theResult___fst__h10239;
  DEF_nextPc__h10041 = DEF_dInst_89_BITS_6_TO_4_81_EQ_0b110___d282 ? DEF__theResult___fst__h10173 : DEF_incPC__h10076;
  switch (DEF_size__h8152) {
  case (tUInt8)0u:
    DEF_IF_dInst_89_BITS_13_TO_12_57_EQ_0b0_58_THEN_0b_ETC___d267 = primShiftL8(4u,
										4u,
										(tUInt8)1u,
										2u,
										(tUInt8)(DEF_offset__h8154));
    break;
  case (tUInt8)1u:
    DEF_IF_dInst_89_BITS_13_TO_12_57_EQ_0b0_58_THEN_0b_ETC___d267 = primShiftL8(4u,
										4u,
										(tUInt8)3u,
										2u,
										(tUInt8)(DEF_offset__h8154));
    break;
  case (tUInt8)2u:
    DEF_IF_dInst_89_BITS_13_TO_12_57_EQ_0b0_58_THEN_0b_ETC___d267 = primShiftL8(4u,
										4u,
										(tUInt8)15u,
										2u,
										(tUInt8)(DEF_offset__h8154));
    break;
  default:
    DEF_IF_dInst_89_BITS_13_TO_12_57_EQ_0b0_58_THEN_0b_ETC___d267 = (tUInt8)0u;
  }
  DEF_req_byte_en__h8847 = DEF_dInst_89_BIT_5___d256 ? DEF_IF_dInst_89_BITS_13_TO_12_57_EQ_0b0_58_THEN_0b_ETC___d267 : (tUInt8)0u;
  DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d239 = DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d236 == 1006649342u;
  DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d238 = DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d236 == 1006649341u;
  DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d237 = DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d236 == 1006649340u;
  DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d280 = DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d254 && (!DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d237 && (!DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d238 && !DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d239));
  DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d255 = DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d254 && (DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d237 || (DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d238 || DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d239));
  DEF_x__h9967 = primSLT8(1u,
			  32u,
			  (tUInt32)(DEF_rs1_val__h10070),
			  32u,
			  (tUInt32)(DEF_alu_src2__h9813));
  DEF_x__h9974 = DEF_rs1_val__h10070 < DEF_alu_src2__h9813;
  switch (DEF_funct3__h9814) {
  case (tUInt8)0u:
    DEF_rd_val__h9816 = DEF_dInst_89_BIT_5___d256 && DEF_dInst_89_BIT_30___d319 ? DEF_rs1_val__h10070 - DEF_alu_src2__h9813 : DEF_rs1_val__h10070 + DEF_alu_src2__h9813;
    break;
  case (tUInt8)1u:
    DEF_rd_val__h9816 = primShiftL32(32u,
				     32u,
				     (tUInt32)(DEF_rs1_val__h10070),
				     5u,
				     (tUInt8)(DEF_shamt__h9819));
    break;
  case (tUInt8)2u:
    DEF_rd_val__h9816 = (tUInt32)(DEF_x__h9967);
    break;
  case (tUInt8)3u:
    DEF_rd_val__h9816 = (tUInt32)(DEF_x__h9974);
    break;
  case (tUInt8)4u:
    DEF_rd_val__h9816 = DEF_rs1_val__h10070 ^ DEF_alu_src2__h9813;
    break;
  case (tUInt8)5u:
    DEF_rd_val__h9816 = DEF_dInst_89_BIT_30___d319 ? primShiftRA32(32u,
								   32u,
								   (tUInt32)(DEF_rs1_val__h10070),
								   5u,
								   (tUInt8)(DEF_shamt__h9819)) : primShiftR32(32u,
													      32u,
													      (tUInt32)(DEF_rs1_val__h10070),
													      5u,
													      (tUInt8)(DEF_shamt__h9819));
    break;
  case (tUInt8)6u:
    DEF_rd_val__h9816 = DEF_rs1_val__h10070 | DEF_alu_src2__h9813;
    break;
  case (tUInt8)7u:
    DEF_rd_val__h9816 = DEF_rs1_val__h10070 & DEF_alu_src2__h9813;
    break;
  default:
    DEF_rd_val__h9816 = 0u;
  }
  DEF_data__h8149 = DEF_dInst_89_BIT_2___d286 && DEF_dInst_89_BIT_5___d256 ? DEF_imm__h8147 : (DEF_dInst_89_BIT_2___d286 && !DEF_dInst_89_BIT_5___d256 ? DEF_rd_val__h9812 : DEF_rd_val__h9816);
  DEF_v__h9423 = DEF_dInst_89_BITS_6_TO_4_81_EQ_0b110___d282 ? DEF_incPC__h10076 : DEF_data__h8149;
  DEF_shift_amount__h8239 = (tUInt8)31u & (DEF_offset__h8154 << 3u);
  DEF_x__h9039 = primShiftL32(32u,
			      32u,
			      (tUInt32)(DEF_rs2_val__h10071),
			      5u,
			      (tUInt8)(DEF_shift_amount__h8239));
  DEF_data__h10038 = DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d254 ? DEF_x__h9039 : DEF_v__h9423;
  DEF_x__h9038 = (DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d236 << 2u) | (tUInt32)((tUInt8)0u);
  DEF__1_CONCAT_IF_dInst_89_BIT_5_56_THEN_IF_dInst_89_ETC___d274.set_bits_in_word((tUInt8)1u,
										  2u,
										  4u,
										  1u).set_bits_in_word(DEF_req_byte_en__h8847,
												       2u,
												       0u,
												       4u).set_whole_word(DEF_x__h9038,
															  1u).set_whole_word(DEF_x__h9039,
																	     0u);
  if (!(PORT_RST_N == (tUInt8)0u))
    dollar_fdisplay(sim_hdl,
		    this,
		    "32,s,48,-32,s",
		    DEF_lfh___d3,
		    &__str_literal_6,
		    DEF_x__h10689,
		    DEF_signed_0___d14,
		    &__str_literal_14);
  DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d355 = (tUInt8)63u & (((((DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d254 && (tUInt8)((tUInt8)1u & (DEF_dInst___d189 >> 14u))) << 5u) | (DEF_size__h8152 << 3u)) | (DEF_offset__h8154 << 1u)) | DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d255);
  if (DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d255)
    INST_toMMIO_rv.METH_port0__write(DEF__1_CONCAT_IF_dInst_89_BIT_5_56_THEN_IF_dInst_89_ETC___d274);
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d255)
      dollar_fwrite(sim_hdl,
		    this,
		    "32,s,48,-32",
		    DEF_lfh___d3,
		    &__str_literal_8,
		    DEF_x__h10689,
		    DEF_signed_0___d14);
    if (DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d255)
      dollar_fwrite(sim_hdl, this, "32,s", DEF_lfh___d3, &__str_literal_15);
    if (DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d255)
      dollar_fwrite(sim_hdl, this, "32,s,s", DEF_lfh___d3, &__str_literal_16, &__str_literal_17);
    if (DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d255)
      dollar_fwrite(sim_hdl, this, "32,s,4", DEF_lfh___d3, &__str_literal_18, DEF_req_byte_en__h8847);
    if (DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d255)
      dollar_fwrite(sim_hdl, this, "32,s,s", DEF_lfh___d3, &__str_literal_19, &__str_literal_20);
    if (DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d255)
      dollar_fwrite(sim_hdl, this, "32,s,32", DEF_lfh___d3, &__str_literal_18, DEF_x__h9038);
    if (DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d255)
      dollar_fwrite(sim_hdl, this, "32,s,s", DEF_lfh___d3, &__str_literal_19, &__str_literal_21);
    if (DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d255)
      dollar_fwrite(sim_hdl,
		    this,
		    "32,s,32,s",
		    DEF_lfh___d3,
		    &__str_literal_18,
		    DEF_x__h9039,
		    &__str_literal_22);
    if (DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d255)
      dollar_fwrite(sim_hdl, this, "32,s", DEF_lfh___d3, &__str_literal_10);
    if (DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d280)
      dollar_fwrite(sim_hdl,
		    this,
		    "32,s,48,-32",
		    DEF_lfh___d3,
		    &__str_literal_8,
		    DEF_x__h10689,
		    DEF_signed_0___d14);
    if (DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d280)
      dollar_fwrite(sim_hdl, this, "32,s", DEF_lfh___d3, &__str_literal_23);
    if (DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d280)
      dollar_fwrite(sim_hdl, this, "32,s,s", DEF_lfh___d3, &__str_literal_16, &__str_literal_17);
    if (DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d280)
      dollar_fwrite(sim_hdl, this, "32,s,4", DEF_lfh___d3, &__str_literal_18, DEF_req_byte_en__h8847);
    if (DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d280)
      dollar_fwrite(sim_hdl, this, "32,s,s", DEF_lfh___d3, &__str_literal_19, &__str_literal_20);
    if (DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d280)
      dollar_fwrite(sim_hdl, this, "32,s,32", DEF_lfh___d3, &__str_literal_18, DEF_x__h9038);
    if (DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d280)
      dollar_fwrite(sim_hdl, this, "32,s,s", DEF_lfh___d3, &__str_literal_19, &__str_literal_21);
    if (DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d280)
      dollar_fwrite(sim_hdl,
		    this,
		    "32,s,32,s",
		    DEF_lfh___d3,
		    &__str_literal_18,
		    DEF_x__h9039,
		    &__str_literal_22);
    if (DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d280)
      dollar_fwrite(sim_hdl, this, "32,s", DEF_lfh___d3, &__str_literal_10);
  }
  if (DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d280)
    INST_toDmem_rv.METH_port0__write(DEF__1_CONCAT_IF_dInst_89_BIT_5_56_THEN_IF_dInst_89_ETC___d274);
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    if (DEF_dInst_89_BIT_6_90_OR_NOT_dInst_89_BITS_4_TO_3__ETC___d283)
      dollar_fwrite(sim_hdl,
		    this,
		    "32,s,48,-32",
		    DEF_lfh___d3,
		    &__str_literal_8,
		    DEF_x__h10689,
		    DEF_signed_0___d14);
    if (DEF_dInst_89_BIT_6_90_OR_NOT_dInst_89_BITS_4_TO_3__ETC___d283)
      dollar_fwrite(sim_hdl, this, "32,s", DEF_lfh___d3, &__str_literal_24);
    if (DEF_dInst_89_BIT_6_90_OR_NOT_dInst_89_BITS_4_TO_3__ETC___d283)
      dollar_fwrite(sim_hdl, this, "32,s", DEF_lfh___d3, &__str_literal_10);
    if (DEF_dInst_89_BIT_6_90_OR_NOT_dInst_89_BITS_4_TO_3__ETC___d285)
      dollar_fwrite(sim_hdl,
		    this,
		    "32,s,48,-32",
		    DEF_lfh___d3,
		    &__str_literal_8,
		    DEF_x__h10689,
		    DEF_signed_0___d14);
    if (DEF_dInst_89_BIT_6_90_OR_NOT_dInst_89_BITS_4_TO_3__ETC___d285)
      dollar_fwrite(sim_hdl, this, "32,s", DEF_lfh___d3, &__str_literal_25);
    if (DEF_dInst_89_BIT_6_90_OR_NOT_dInst_89_BITS_4_TO_3__ETC___d285)
      dollar_fwrite(sim_hdl, this, "32,s", DEF_lfh___d3, &__str_literal_10);
  }
  INST_pc.METH_write(DEF_nextPc__h10041);
  INST_rvd.METH_write(DEF_data__h10038);
  if (!(PORT_RST_N == (tUInt8)0u))
  {
    dollar_fwrite(sim_hdl,
		  this,
		  "32,s,48,-32",
		  DEF_lfh___d3,
		  &__str_literal_8,
		  DEF_x__h10689,
		  DEF_signed_0___d14);
    dollar_fwrite(sim_hdl, this, "32,s,32", DEF_lfh___d3, &__str_literal_26, DEF_data__h10038);
    dollar_fwrite(sim_hdl, this, "32,s", DEF_lfh___d3, &__str_literal_10);
  }
  INST_mem_business.METH_write(DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d355);
  INST_state.METH_write((tUInt8)3u);
}

void MOD_mkmulticycle::RL_writeback()
{
  tUInt8 DEF_x__h11134;
  tUInt8 DEF_NOT_dInst_89_BIT_39_91___d392;
  tUInt8 DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d388;
  tUInt8 DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d390;
  tUInt8 DEF_dInst_89_BITS_11_TO_7_06_EQ_0_67_AND_dInst_89__ETC___d395;
  tUInt8 DEF_dInst_89_BITS_11_TO_7_06_EQ_1_15_AND_dInst_89__ETC___d416;
  tUInt8 DEF_dInst_89_BITS_11_TO_7_06_EQ_2_17_AND_dInst_89__ETC___d418;
  tUInt8 DEF_dInst_89_BITS_11_TO_7_06_EQ_3_19_AND_dInst_89__ETC___d420;
  tUInt8 DEF_dInst_89_BITS_11_TO_7_06_EQ_4_21_AND_dInst_89__ETC___d422;
  tUInt8 DEF_dInst_89_BITS_11_TO_7_06_EQ_5_23_AND_dInst_89__ETC___d424;
  tUInt8 DEF_dInst_89_BITS_11_TO_7_06_EQ_6_25_AND_dInst_89__ETC___d426;
  tUInt8 DEF_dInst_89_BITS_11_TO_7_06_EQ_7_27_AND_dInst_89__ETC___d428;
  tUInt8 DEF_dInst_89_BITS_11_TO_7_06_EQ_8_29_AND_dInst_89__ETC___d430;
  tUInt8 DEF_dInst_89_BITS_11_TO_7_06_EQ_9_31_AND_dInst_89__ETC___d432;
  tUInt8 DEF_dInst_89_BITS_11_TO_7_06_EQ_10_33_AND_dInst_89_ETC___d434;
  tUInt8 DEF_dInst_89_BITS_11_TO_7_06_EQ_11_35_AND_dInst_89_ETC___d436;
  tUInt8 DEF_dInst_89_BITS_11_TO_7_06_EQ_12_37_AND_dInst_89_ETC___d438;
  tUInt8 DEF_dInst_89_BITS_11_TO_7_06_EQ_13_39_AND_dInst_89_ETC___d440;
  tUInt8 DEF_dInst_89_BITS_11_TO_7_06_EQ_14_41_AND_dInst_89_ETC___d442;
  tUInt8 DEF_dInst_89_BITS_11_TO_7_06_EQ_15_43_AND_dInst_89_ETC___d444;
  tUInt8 DEF_dInst_89_BITS_11_TO_7_06_EQ_16_45_AND_dInst_89_ETC___d446;
  tUInt8 DEF_dInst_89_BITS_11_TO_7_06_EQ_17_47_AND_dInst_89_ETC___d448;
  tUInt8 DEF_dInst_89_BITS_11_TO_7_06_EQ_18_49_AND_dInst_89_ETC___d450;
  tUInt8 DEF_dInst_89_BITS_11_TO_7_06_EQ_19_51_AND_dInst_89_ETC___d452;
  tUInt8 DEF_dInst_89_BITS_11_TO_7_06_EQ_20_53_AND_dInst_89_ETC___d454;
  tUInt8 DEF_dInst_89_BITS_11_TO_7_06_EQ_21_55_AND_dInst_89_ETC___d456;
  tUInt8 DEF_dInst_89_BITS_11_TO_7_06_EQ_22_57_AND_dInst_89_ETC___d458;
  tUInt8 DEF_dInst_89_BITS_11_TO_7_06_EQ_23_59_AND_dInst_89_ETC___d460;
  tUInt8 DEF_dInst_89_BITS_11_TO_7_06_EQ_24_61_AND_dInst_89_ETC___d462;
  tUInt8 DEF_dInst_89_BITS_11_TO_7_06_EQ_25_63_AND_dInst_89_ETC___d464;
  tUInt8 DEF_dInst_89_BITS_11_TO_7_06_EQ_26_65_AND_dInst_89_ETC___d466;
  tUInt8 DEF_dInst_89_BITS_11_TO_7_06_EQ_27_67_AND_dInst_89_ETC___d468;
  tUInt8 DEF_dInst_89_BITS_11_TO_7_06_EQ_28_69_AND_dInst_89_ETC___d470;
  tUInt8 DEF_dInst_89_BITS_11_TO_7_06_EQ_29_71_AND_dInst_89_ETC___d472;
  tUInt8 DEF_dInst_89_BITS_11_TO_7_06_EQ_30_73_AND_dInst_89_ETC___d474;
  tUInt8 DEF_dInst_89_BITS_11_TO_7_06_EQ_31_75_AND_dInst_89_ETC___d476;
  tUInt32 DEF_v__h10737;
  tUInt32 DEF_mem_data__h11085;
  tUInt32 DEF_v__h10793;
  tUInt8 DEF__read_offset__h10809;
  tUInt8 DEF_x__h11104;
  tUInt32 DEF_mem_data__h11086;
  tUInt32 DEF_x__h11162;
  tUInt32 DEF_x_first_data__h10944;
  tUInt32 DEF_x_first_data__h11069;
  tUInt32 DEF_data__h10732;
  DEF_signed_0___d14 = 0u;
  DEF_fromMMIO_rv_port1__read____d359 = INST_fromMMIO_rv.METH_port1__read();
  DEF_fromDmem_rv_port1__read____d361 = INST_fromDmem_rv.METH_port1__read();
  DEF_x__h10689 = INST_current_id.METH_read();
  DEF_dInst___d189 = INST_dInst.METH_read();
  DEF_dInst_89_BITS_11_TO_7___d206 = (tUInt8)((tUInt8)31u & (DEF_dInst___d189 >> 7u));
  DEF_dInst_89_BIT_6___d190 = (tUInt8)((tUInt8)1u & (DEF_dInst___d189 >> 6u));
  DEF_lfh___d3 = INST_lfh.METH_read();
  DEF_data__h10732 = INST_rvd.METH_read();
  DEF_mem_business___d357 = INST_mem_business.METH_read();
  DEF_mem_business_57_BIT_0___d358 = (tUInt8)((tUInt8)1u & DEF_mem_business___d357);
  DEF_x_first_data__h10944 = DEF_fromMMIO_rv_port1__read____d359.get_whole_word(0u);
  DEF_x_first_data__h11069 = DEF_fromDmem_rv_port1__read____d361.get_whole_word(0u);
  DEF_mem_business_57_BITS_5_TO_3___d368 = (tUInt8)(DEF_mem_business___d357 >> 3u);
  DEF__read_offset__h10809 = (tUInt8)((tUInt8)3u & (DEF_mem_business___d357 >> 1u));
  DEF_dInst_89_BIT_36___d365 = (tUInt8)((tUInt8)1u & (DEF_dInst___d189 >> 36u));
  DEF_mem_data__h11085 = DEF_mem_business_57_BIT_0___d358 ? DEF_x_first_data__h10944 : DEF_x_first_data__h11069;
  DEF_dInst_89_BITS_11_TO_7_06_EQ_0___d367 = DEF_dInst_89_BITS_11_TO_7___d206 == (tUInt8)0u;
  DEF_dInst_89_BITS_4_TO_3_91_EQ_0b0___d192 = ((tUInt8)((tUInt8)3u & (DEF_dInst___d189 >> 3u))) == (tUInt8)0u;
  DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d254 = !DEF_dInst_89_BIT_6___d190 && DEF_dInst_89_BITS_4_TO_3_91_EQ_0b0___d192;
  DEF_dInst_89_BITS_11_TO_7_06_EQ_31_75_AND_dInst_89_ETC___d476 = DEF_dInst_89_BITS_11_TO_7___d206 == (tUInt8)31u && DEF_dInst_89_BIT_36___d365;
  DEF_dInst_89_BITS_11_TO_7_06_EQ_30_73_AND_dInst_89_ETC___d474 = DEF_dInst_89_BITS_11_TO_7___d206 == (tUInt8)30u && DEF_dInst_89_BIT_36___d365;
  DEF_dInst_89_BITS_11_TO_7_06_EQ_29_71_AND_dInst_89_ETC___d472 = DEF_dInst_89_BITS_11_TO_7___d206 == (tUInt8)29u && DEF_dInst_89_BIT_36___d365;
  DEF_dInst_89_BITS_11_TO_7_06_EQ_28_69_AND_dInst_89_ETC___d470 = DEF_dInst_89_BITS_11_TO_7___d206 == (tUInt8)28u && DEF_dInst_89_BIT_36___d365;
  DEF_dInst_89_BITS_11_TO_7_06_EQ_27_67_AND_dInst_89_ETC___d468 = DEF_dInst_89_BITS_11_TO_7___d206 == (tUInt8)27u && DEF_dInst_89_BIT_36___d365;
  DEF_dInst_89_BITS_11_TO_7_06_EQ_25_63_AND_dInst_89_ETC___d464 = DEF_dInst_89_BITS_11_TO_7___d206 == (tUInt8)25u && DEF_dInst_89_BIT_36___d365;
  DEF_dInst_89_BITS_11_TO_7_06_EQ_26_65_AND_dInst_89_ETC___d466 = DEF_dInst_89_BITS_11_TO_7___d206 == (tUInt8)26u && DEF_dInst_89_BIT_36___d365;
  DEF_dInst_89_BITS_11_TO_7_06_EQ_24_61_AND_dInst_89_ETC___d462 = DEF_dInst_89_BITS_11_TO_7___d206 == (tUInt8)24u && DEF_dInst_89_BIT_36___d365;
  DEF_dInst_89_BITS_11_TO_7_06_EQ_23_59_AND_dInst_89_ETC___d460 = DEF_dInst_89_BITS_11_TO_7___d206 == (tUInt8)23u && DEF_dInst_89_BIT_36___d365;
  DEF_dInst_89_BITS_11_TO_7_06_EQ_22_57_AND_dInst_89_ETC___d458 = DEF_dInst_89_BITS_11_TO_7___d206 == (tUInt8)22u && DEF_dInst_89_BIT_36___d365;
  DEF_dInst_89_BITS_11_TO_7_06_EQ_21_55_AND_dInst_89_ETC___d456 = DEF_dInst_89_BITS_11_TO_7___d206 == (tUInt8)21u && DEF_dInst_89_BIT_36___d365;
  DEF_dInst_89_BITS_11_TO_7_06_EQ_20_53_AND_dInst_89_ETC___d454 = DEF_dInst_89_BITS_11_TO_7___d206 == (tUInt8)20u && DEF_dInst_89_BIT_36___d365;
  DEF_dInst_89_BITS_11_TO_7_06_EQ_19_51_AND_dInst_89_ETC___d452 = DEF_dInst_89_BITS_11_TO_7___d206 == (tUInt8)19u && DEF_dInst_89_BIT_36___d365;
  DEF_dInst_89_BITS_11_TO_7_06_EQ_18_49_AND_dInst_89_ETC___d450 = DEF_dInst_89_BITS_11_TO_7___d206 == (tUInt8)18u && DEF_dInst_89_BIT_36___d365;
  DEF_dInst_89_BITS_11_TO_7_06_EQ_17_47_AND_dInst_89_ETC___d448 = DEF_dInst_89_BITS_11_TO_7___d206 == (tUInt8)17u && DEF_dInst_89_BIT_36___d365;
  DEF_dInst_89_BITS_11_TO_7_06_EQ_16_45_AND_dInst_89_ETC___d446 = DEF_dInst_89_BITS_11_TO_7___d206 == (tUInt8)16u && DEF_dInst_89_BIT_36___d365;
  DEF_dInst_89_BITS_11_TO_7_06_EQ_15_43_AND_dInst_89_ETC___d444 = DEF_dInst_89_BITS_11_TO_7___d206 == (tUInt8)15u && DEF_dInst_89_BIT_36___d365;
  DEF_dInst_89_BITS_11_TO_7_06_EQ_14_41_AND_dInst_89_ETC___d442 = DEF_dInst_89_BITS_11_TO_7___d206 == (tUInt8)14u && DEF_dInst_89_BIT_36___d365;
  DEF_dInst_89_BITS_11_TO_7_06_EQ_13_39_AND_dInst_89_ETC___d440 = DEF_dInst_89_BITS_11_TO_7___d206 == (tUInt8)13u && DEF_dInst_89_BIT_36___d365;
  DEF_dInst_89_BITS_11_TO_7_06_EQ_12_37_AND_dInst_89_ETC___d438 = DEF_dInst_89_BITS_11_TO_7___d206 == (tUInt8)12u && DEF_dInst_89_BIT_36___d365;
  DEF_dInst_89_BITS_11_TO_7_06_EQ_11_35_AND_dInst_89_ETC___d436 = DEF_dInst_89_BITS_11_TO_7___d206 == (tUInt8)11u && DEF_dInst_89_BIT_36___d365;
  DEF_dInst_89_BITS_11_TO_7_06_EQ_10_33_AND_dInst_89_ETC___d434 = DEF_dInst_89_BITS_11_TO_7___d206 == (tUInt8)10u && DEF_dInst_89_BIT_36___d365;
  DEF_dInst_89_BITS_11_TO_7_06_EQ_9_31_AND_dInst_89__ETC___d432 = DEF_dInst_89_BITS_11_TO_7___d206 == (tUInt8)9u && DEF_dInst_89_BIT_36___d365;
  DEF_dInst_89_BITS_11_TO_7_06_EQ_8_29_AND_dInst_89__ETC___d430 = DEF_dInst_89_BITS_11_TO_7___d206 == (tUInt8)8u && DEF_dInst_89_BIT_36___d365;
  DEF_dInst_89_BITS_11_TO_7_06_EQ_7_27_AND_dInst_89__ETC___d428 = DEF_dInst_89_BITS_11_TO_7___d206 == (tUInt8)7u && DEF_dInst_89_BIT_36___d365;
  DEF_dInst_89_BITS_11_TO_7_06_EQ_6_25_AND_dInst_89__ETC___d426 = DEF_dInst_89_BITS_11_TO_7___d206 == (tUInt8)6u && DEF_dInst_89_BIT_36___d365;
  DEF_dInst_89_BITS_11_TO_7_06_EQ_5_23_AND_dInst_89__ETC___d424 = DEF_dInst_89_BITS_11_TO_7___d206 == (tUInt8)5u && DEF_dInst_89_BIT_36___d365;
  DEF_dInst_89_BITS_11_TO_7_06_EQ_4_21_AND_dInst_89__ETC___d422 = DEF_dInst_89_BITS_11_TO_7___d206 == (tUInt8)4u && DEF_dInst_89_BIT_36___d365;
  DEF_dInst_89_BITS_11_TO_7_06_EQ_3_19_AND_dInst_89__ETC___d420 = DEF_dInst_89_BITS_11_TO_7___d206 == (tUInt8)3u && DEF_dInst_89_BIT_36___d365;
  DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d390 = DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d254 && !DEF_mem_business_57_BIT_0___d358;
  DEF_dInst_89_BITS_11_TO_7_06_EQ_2_17_AND_dInst_89__ETC___d418 = DEF_dInst_89_BITS_11_TO_7___d206 == (tUInt8)2u && DEF_dInst_89_BIT_36___d365;
  DEF_dInst_89_BITS_11_TO_7_06_EQ_1_15_AND_dInst_89__ETC___d416 = DEF_dInst_89_BITS_11_TO_7___d206 == (tUInt8)1u && DEF_dInst_89_BIT_36___d365;
  DEF_dInst_89_BITS_11_TO_7_06_EQ_0_67_AND_dInst_89__ETC___d395 = DEF_dInst_89_BITS_11_TO_7_06_EQ_0___d367 && (DEF_dInst_89_BIT_36___d365 && !DEF_dInst_89_BITS_11_TO_7_06_EQ_0___d367);
  DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d388 = DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d254 && DEF_mem_business_57_BIT_0___d358;
  DEF_NOT_dInst_89_BIT_39_91___d392 = !((tUInt8)(DEF_dInst___d189 >> 39u));
  DEF_x__h11134 = (tUInt8)31u & (DEF__read_offset__h10809 << 3u);
  DEF_mem_data__h11086 = primShiftR32(32u,
				      32u,
				      (tUInt32)(DEF_mem_data__h11085),
				      5u,
				      (tUInt8)(DEF_x__h11134));
  DEF_x__h11162 = (tUInt32)(65535u & DEF_mem_data__h11086);
  DEF_x__h11104 = (tUInt8)((tUInt8)255u & DEF_mem_data__h11086);
  switch (DEF_mem_business_57_BITS_5_TO_3___d368) {
  case (tUInt8)0u:
    DEF_v__h10793 = primSignExt32(32u, 8u, (tUInt8)(DEF_x__h11104));
    break;
  case (tUInt8)1u:
    DEF_v__h10793 = primSignExt32(32u, 16u, (tUInt32)(DEF_x__h11162));
    break;
  case (tUInt8)4u:
    DEF_v__h10793 = (tUInt32)(DEF_x__h11104);
    break;
  case (tUInt8)5u:
    DEF_v__h10793 = DEF_x__h11162;
    break;
  case (tUInt8)2u:
    DEF_v__h10793 = DEF_mem_data__h11086;
    break;
  default:
    DEF_v__h10793 = DEF_data__h10732;
  }
  DEF_v__h10737 = DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d254 ? DEF_v__h10793 : DEF_data__h10732;
  if (!(PORT_RST_N == (tUInt8)0u))
    dollar_fdisplay(sim_hdl,
		    this,
		    "32,s,48,-32,s",
		    DEF_lfh___d3,
		    &__str_literal_6,
		    DEF_x__h10689,
		    DEF_signed_0___d14,
		    &__str_literal_27);
  DEF__0_CONCAT_DONTCARE___d22.set_bits_in_word(UWide_literal_69_haaaaaaaaaaaaaaaaa.get_bits_in_word8(2u,
												      0u,
												      5u),
						2u,
						0u,
						5u).set_whole_word(UWide_literal_69_haaaaaaaaaaaaaaaaa.get_whole_word(1u),
								   1u).set_whole_word(UWide_literal_69_haaaaaaaaaaaaaaaaa.get_whole_word(0u),
										      0u);
  INST_retired.METH_enq(DEF_x__h10689);
  INST_state.METH_write((tUInt8)0u);
  if (DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d388)
    INST_fromMMIO_rv.METH_port1__write(DEF__0_CONCAT_DONTCARE___d22);
  if (DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d390)
    INST_fromDmem_rv.METH_port1__write(DEF__0_CONCAT_DONTCARE___d22);
  if (DEF_dInst_89_BITS_11_TO_7_06_EQ_0_67_AND_dInst_89__ETC___d395)
    INST_rf_0.METH_write(DEF_v__h10737);
  if (DEF_NOT_dInst_89_BIT_39_91___d392)
    INST_pc.METH_write(0u);
  if (DEF_dInst_89_BITS_11_TO_7_06_EQ_1_15_AND_dInst_89__ETC___d416)
    INST_rf_1.METH_write(DEF_v__h10737);
  if (DEF_dInst_89_BITS_11_TO_7_06_EQ_2_17_AND_dInst_89__ETC___d418)
    INST_rf_2.METH_write(DEF_v__h10737);
  if (DEF_dInst_89_BITS_11_TO_7_06_EQ_3_19_AND_dInst_89__ETC___d420)
    INST_rf_3.METH_write(DEF_v__h10737);
  if (DEF_dInst_89_BITS_11_TO_7_06_EQ_4_21_AND_dInst_89__ETC___d422)
    INST_rf_4.METH_write(DEF_v__h10737);
  if (DEF_dInst_89_BITS_11_TO_7_06_EQ_5_23_AND_dInst_89__ETC___d424)
    INST_rf_5.METH_write(DEF_v__h10737);
  if (DEF_dInst_89_BITS_11_TO_7_06_EQ_6_25_AND_dInst_89__ETC___d426)
    INST_rf_6.METH_write(DEF_v__h10737);
  if (DEF_dInst_89_BITS_11_TO_7_06_EQ_7_27_AND_dInst_89__ETC___d428)
    INST_rf_7.METH_write(DEF_v__h10737);
  if (DEF_dInst_89_BITS_11_TO_7_06_EQ_8_29_AND_dInst_89__ETC___d430)
    INST_rf_8.METH_write(DEF_v__h10737);
  if (DEF_dInst_89_BITS_11_TO_7_06_EQ_9_31_AND_dInst_89__ETC___d432)
    INST_rf_9.METH_write(DEF_v__h10737);
  if (DEF_dInst_89_BITS_11_TO_7_06_EQ_10_33_AND_dInst_89_ETC___d434)
    INST_rf_10.METH_write(DEF_v__h10737);
  if (DEF_dInst_89_BITS_11_TO_7_06_EQ_11_35_AND_dInst_89_ETC___d436)
    INST_rf_11.METH_write(DEF_v__h10737);
  if (DEF_dInst_89_BITS_11_TO_7_06_EQ_13_39_AND_dInst_89_ETC___d440)
    INST_rf_13.METH_write(DEF_v__h10737);
  if (DEF_dInst_89_BITS_11_TO_7_06_EQ_12_37_AND_dInst_89_ETC___d438)
    INST_rf_12.METH_write(DEF_v__h10737);
  if (DEF_dInst_89_BITS_11_TO_7_06_EQ_14_41_AND_dInst_89_ETC___d442)
    INST_rf_14.METH_write(DEF_v__h10737);
  if (DEF_dInst_89_BITS_11_TO_7_06_EQ_15_43_AND_dInst_89_ETC___d444)
    INST_rf_15.METH_write(DEF_v__h10737);
  if (DEF_dInst_89_BITS_11_TO_7_06_EQ_16_45_AND_dInst_89_ETC___d446)
    INST_rf_16.METH_write(DEF_v__h10737);
  if (DEF_dInst_89_BITS_11_TO_7_06_EQ_17_47_AND_dInst_89_ETC___d448)
    INST_rf_17.METH_write(DEF_v__h10737);
  if (DEF_dInst_89_BITS_11_TO_7_06_EQ_18_49_AND_dInst_89_ETC___d450)
    INST_rf_18.METH_write(DEF_v__h10737);
  if (DEF_dInst_89_BITS_11_TO_7_06_EQ_19_51_AND_dInst_89_ETC___d452)
    INST_rf_19.METH_write(DEF_v__h10737);
  if (DEF_dInst_89_BITS_11_TO_7_06_EQ_20_53_AND_dInst_89_ETC___d454)
    INST_rf_20.METH_write(DEF_v__h10737);
  if (DEF_dInst_89_BITS_11_TO_7_06_EQ_21_55_AND_dInst_89_ETC___d456)
    INST_rf_21.METH_write(DEF_v__h10737);
  if (DEF_dInst_89_BITS_11_TO_7_06_EQ_22_57_AND_dInst_89_ETC___d458)
    INST_rf_22.METH_write(DEF_v__h10737);
  if (DEF_dInst_89_BITS_11_TO_7_06_EQ_23_59_AND_dInst_89_ETC___d460)
    INST_rf_23.METH_write(DEF_v__h10737);
  if (DEF_dInst_89_BITS_11_TO_7_06_EQ_25_63_AND_dInst_89_ETC___d464)
    INST_rf_25.METH_write(DEF_v__h10737);
  if (DEF_dInst_89_BITS_11_TO_7_06_EQ_24_61_AND_dInst_89_ETC___d462)
    INST_rf_24.METH_write(DEF_v__h10737);
  if (DEF_dInst_89_BITS_11_TO_7_06_EQ_26_65_AND_dInst_89_ETC___d466)
    INST_rf_26.METH_write(DEF_v__h10737);
  if (DEF_dInst_89_BITS_11_TO_7_06_EQ_27_67_AND_dInst_89_ETC___d468)
    INST_rf_27.METH_write(DEF_v__h10737);
  if (DEF_dInst_89_BITS_11_TO_7_06_EQ_28_69_AND_dInst_89_ETC___d470)
    INST_rf_28.METH_write(DEF_v__h10737);
  if (DEF_dInst_89_BITS_11_TO_7_06_EQ_29_71_AND_dInst_89_ETC___d472)
    INST_rf_29.METH_write(DEF_v__h10737);
  if (DEF_dInst_89_BITS_11_TO_7_06_EQ_31_75_AND_dInst_89_ETC___d476)
    INST_rf_31.METH_write(DEF_v__h10737);
  if (DEF_dInst_89_BITS_11_TO_7_06_EQ_30_73_AND_dInst_89_ETC___d474)
    INST_rf_30.METH_write(DEF_v__h10737);
}

void MOD_mkmulticycle::RL_administrative_konata_commit()
{
  tUInt64 DEF_x__h11623;
  tUInt64 DEF__read__h3759;
  tUInt64 DEF_f__h11612;
  DEF_signed_0___d14 = 0u;
  DEF_f__h11612 = INST_retired.METH_first();
  DEF__read__h3759 = INST_commit_id.METH_read();
  DEF_lfh___d3 = INST_lfh.METH_read();
  DEF_x__h11623 = 281474976710655llu & (DEF__read__h3759 + 1llu);
  INST_retired.METH_deq();
  INST_commit_id.METH_write(DEF_x__h11623);
  if (!(PORT_RST_N == (tUInt8)0u))
    dollar_fdisplay(sim_hdl,
		    this,
		    "32,s,48,48,-32",
		    DEF_lfh___d3,
		    &__str_literal_28,
		    DEF_f__h11612,
		    DEF__read__h3759,
		    DEF_signed_0___d14);
}

void MOD_mkmulticycle::RL_administrative_konata_flush()
{
  tUInt64 DEF_f__h11746;
  tUInt32 DEF_signed_1___d483;
  DEF_signed_1___d483 = 1u;
  DEF_signed_0___d14 = 0u;
  DEF_f__h11746 = INST_squashed.METH_first();
  DEF_lfh___d3 = INST_lfh.METH_read();
  INST_squashed.METH_deq();
  if (!(PORT_RST_N == (tUInt8)0u))
    dollar_fdisplay(sim_hdl,
		    this,
		    "32,s,48,-32,-32",
		    DEF_lfh___d3,
		    &__str_literal_28,
		    DEF_f__h11746,
		    DEF_signed_0___d14,
		    DEF_signed_1___d483);
}


/* Methods */

tUWide MOD_mkmulticycle::METH_getIReq()
{
  PORT_EN_getIReq = (tUInt8)1u;
  DEF_WILL_FIRE_getIReq = (tUInt8)1u;
  DEF_toImem_rv_port1__read____d484 = INST_toImem_rv.METH_port1__read();
  wop_primExtractWide(68u, 69u, DEF_toImem_rv_port1__read____d484, 32u, 67u, 32u, 0u, PORT_getIReq);
  DEF__0_CONCAT_DONTCARE___d22.set_bits_in_word(UWide_literal_69_haaaaaaaaaaaaaaaaa.get_bits_in_word8(2u,
												      0u,
												      5u),
						2u,
						0u,
						5u).set_whole_word(UWide_literal_69_haaaaaaaaaaaaaaaaa.get_whole_word(1u),
								   1u).set_whole_word(UWide_literal_69_haaaaaaaaaaaaaaaaa.get_whole_word(0u),
										      0u);
  INST_toImem_rv.METH_port1__write(DEF__0_CONCAT_DONTCARE___d22);
  return PORT_getIReq;
}

tUInt8 MOD_mkmulticycle::METH_RDY_getIReq()
{
  tUInt8 PORT_RDY_getIReq;
  tUInt8 DEF_CAN_FIRE_getIReq;
  DEF_toImem_rv_port1__read____d484 = INST_toImem_rv.METH_port1__read();
  DEF_CAN_FIRE_getIReq = DEF_toImem_rv_port1__read____d484.get_bits_in_word8(2u, 4u, 1u);
  PORT_RDY_getIReq = DEF_CAN_FIRE_getIReq;
  return PORT_RDY_getIReq;
}

void MOD_mkmulticycle::METH_getIResp(tUWide ARG_getIResp_a)
{
  PORT_EN_getIResp = (tUInt8)1u;
  DEF_WILL_FIRE_getIResp = (tUInt8)1u;
  PORT_getIResp_a = ARG_getIResp_a;
  DEF__1_CONCAT_getIResp_a___d485.set_bits_in_word((tUInt8)31u & (((tUInt8)1u << 4u) | ARG_getIResp_a.get_bits_in_word8(2u,
															0u,
															4u)),
						   2u,
						   0u,
						   5u).set_whole_word(ARG_getIResp_a.get_whole_word(1u),
								      1u).set_whole_word(ARG_getIResp_a.get_whole_word(0u),
											 0u);
  INST_fromImem_rv.METH_port0__write(DEF__1_CONCAT_getIResp_a___d485);
}

tUInt8 MOD_mkmulticycle::METH_RDY_getIResp()
{
  tUInt8 PORT_RDY_getIResp;
  tUInt8 DEF_CAN_FIRE_getIResp;
  DEF_fromImem_rv_port0__read____d486 = INST_fromImem_rv.METH_port0__read();
  DEF_CAN_FIRE_getIResp = !DEF_fromImem_rv_port0__read____d486.get_bits_in_word8(2u, 4u, 1u);
  PORT_RDY_getIResp = DEF_CAN_FIRE_getIResp;
  return PORT_RDY_getIResp;
}

tUWide MOD_mkmulticycle::METH_getDReq()
{
  PORT_EN_getDReq = (tUInt8)1u;
  DEF_WILL_FIRE_getDReq = (tUInt8)1u;
  DEF_toDmem_rv_port1__read____d488 = INST_toDmem_rv.METH_port1__read();
  wop_primExtractWide(68u, 69u, DEF_toDmem_rv_port1__read____d488, 32u, 67u, 32u, 0u, PORT_getDReq);
  DEF__0_CONCAT_DONTCARE___d22.set_bits_in_word(UWide_literal_69_haaaaaaaaaaaaaaaaa.get_bits_in_word8(2u,
												      0u,
												      5u),
						2u,
						0u,
						5u).set_whole_word(UWide_literal_69_haaaaaaaaaaaaaaaaa.get_whole_word(1u),
								   1u).set_whole_word(UWide_literal_69_haaaaaaaaaaaaaaaaa.get_whole_word(0u),
										      0u);
  INST_toDmem_rv.METH_port1__write(DEF__0_CONCAT_DONTCARE___d22);
  return PORT_getDReq;
}

tUInt8 MOD_mkmulticycle::METH_RDY_getDReq()
{
  tUInt8 PORT_RDY_getDReq;
  tUInt8 DEF_CAN_FIRE_getDReq;
  DEF_toDmem_rv_port1__read____d488 = INST_toDmem_rv.METH_port1__read();
  DEF_CAN_FIRE_getDReq = DEF_toDmem_rv_port1__read____d488.get_bits_in_word8(2u, 4u, 1u);
  PORT_RDY_getDReq = DEF_CAN_FIRE_getDReq;
  return PORT_RDY_getDReq;
}

void MOD_mkmulticycle::METH_getDResp(tUWide ARG_getDResp_a)
{
  PORT_EN_getDResp = (tUInt8)1u;
  DEF_WILL_FIRE_getDResp = (tUInt8)1u;
  PORT_getDResp_a = ARG_getDResp_a;
  DEF__1_CONCAT_getDResp_a___d489.set_bits_in_word((tUInt8)31u & (((tUInt8)1u << 4u) | ARG_getDResp_a.get_bits_in_word8(2u,
															0u,
															4u)),
						   2u,
						   0u,
						   5u).set_whole_word(ARG_getDResp_a.get_whole_word(1u),
								      1u).set_whole_word(ARG_getDResp_a.get_whole_word(0u),
											 0u);
  INST_fromDmem_rv.METH_port0__write(DEF__1_CONCAT_getDResp_a___d489);
}

tUInt8 MOD_mkmulticycle::METH_RDY_getDResp()
{
  tUInt8 PORT_RDY_getDResp;
  tUInt8 DEF_CAN_FIRE_getDResp;
  DEF_fromDmem_rv_port0__read____d490 = INST_fromDmem_rv.METH_port0__read();
  DEF_CAN_FIRE_getDResp = !DEF_fromDmem_rv_port0__read____d490.get_bits_in_word8(2u, 4u, 1u);
  PORT_RDY_getDResp = DEF_CAN_FIRE_getDResp;
  return PORT_RDY_getDResp;
}

tUWide MOD_mkmulticycle::METH_getMMIOReq()
{
  PORT_EN_getMMIOReq = (tUInt8)1u;
  DEF_WILL_FIRE_getMMIOReq = (tUInt8)1u;
  DEF_toMMIO_rv_port1__read____d492 = INST_toMMIO_rv.METH_port1__read();
  wop_primExtractWide(68u,
		      69u,
		      DEF_toMMIO_rv_port1__read____d492,
		      32u,
		      67u,
		      32u,
		      0u,
		      PORT_getMMIOReq);
  DEF__0_CONCAT_DONTCARE___d22.set_bits_in_word(UWide_literal_69_haaaaaaaaaaaaaaaaa.get_bits_in_word8(2u,
												      0u,
												      5u),
						2u,
						0u,
						5u).set_whole_word(UWide_literal_69_haaaaaaaaaaaaaaaaa.get_whole_word(1u),
								   1u).set_whole_word(UWide_literal_69_haaaaaaaaaaaaaaaaa.get_whole_word(0u),
										      0u);
  INST_toMMIO_rv.METH_port1__write(DEF__0_CONCAT_DONTCARE___d22);
  return PORT_getMMIOReq;
}

tUInt8 MOD_mkmulticycle::METH_RDY_getMMIOReq()
{
  tUInt8 PORT_RDY_getMMIOReq;
  tUInt8 DEF_CAN_FIRE_getMMIOReq;
  DEF_toMMIO_rv_port1__read____d492 = INST_toMMIO_rv.METH_port1__read();
  DEF_CAN_FIRE_getMMIOReq = DEF_toMMIO_rv_port1__read____d492.get_bits_in_word8(2u, 4u, 1u);
  PORT_RDY_getMMIOReq = DEF_CAN_FIRE_getMMIOReq;
  return PORT_RDY_getMMIOReq;
}

void MOD_mkmulticycle::METH_getMMIOResp(tUWide ARG_getMMIOResp_a)
{
  PORT_EN_getMMIOResp = (tUInt8)1u;
  DEF_WILL_FIRE_getMMIOResp = (tUInt8)1u;
  PORT_getMMIOResp_a = ARG_getMMIOResp_a;
  DEF__1_CONCAT_getMMIOResp_a___d493.set_bits_in_word((tUInt8)31u & (((tUInt8)1u << 4u) | ARG_getMMIOResp_a.get_bits_in_word8(2u,
															      0u,
															      4u)),
						      2u,
						      0u,
						      5u).set_whole_word(ARG_getMMIOResp_a.get_whole_word(1u),
									 1u).set_whole_word(ARG_getMMIOResp_a.get_whole_word(0u),
											    0u);
  INST_fromMMIO_rv.METH_port0__write(DEF__1_CONCAT_getMMIOResp_a___d493);
}

tUInt8 MOD_mkmulticycle::METH_RDY_getMMIOResp()
{
  tUInt8 PORT_RDY_getMMIOResp;
  tUInt8 DEF_CAN_FIRE_getMMIOResp;
  DEF_fromMMIO_rv_port0__read____d494 = INST_fromMMIO_rv.METH_port0__read();
  DEF_CAN_FIRE_getMMIOResp = !DEF_fromMMIO_rv_port0__read____d494.get_bits_in_word8(2u, 4u, 1u);
  PORT_RDY_getMMIOResp = DEF_CAN_FIRE_getMMIOResp;
  return PORT_RDY_getMMIOResp;
}


/* Reset routines */

void MOD_mkmulticycle::reset_RST_N(tUInt8 ARG_rst_in)
{
  PORT_RST_N = ARG_rst_in;
  INST_toMMIO_rv.reset_RST(ARG_rst_in);
  INST_toImem_rv.reset_RST(ARG_rst_in);
  INST_toDmem_rv.reset_RST(ARG_rst_in);
  INST_state.reset_RST(ARG_rst_in);
  INST_starting.reset_RST(ARG_rst_in);
  INST_squashed.reset_RST(ARG_rst_in);
  INST_rvd.reset_RST(ARG_rst_in);
  INST_rv2.reset_RST(ARG_rst_in);
  INST_rv1.reset_RST(ARG_rst_in);
  INST_rf_9.reset_RST(ARG_rst_in);
  INST_rf_8.reset_RST(ARG_rst_in);
  INST_rf_7.reset_RST(ARG_rst_in);
  INST_rf_6.reset_RST(ARG_rst_in);
  INST_rf_5.reset_RST(ARG_rst_in);
  INST_rf_4.reset_RST(ARG_rst_in);
  INST_rf_31.reset_RST(ARG_rst_in);
  INST_rf_30.reset_RST(ARG_rst_in);
  INST_rf_3.reset_RST(ARG_rst_in);
  INST_rf_29.reset_RST(ARG_rst_in);
  INST_rf_28.reset_RST(ARG_rst_in);
  INST_rf_27.reset_RST(ARG_rst_in);
  INST_rf_26.reset_RST(ARG_rst_in);
  INST_rf_25.reset_RST(ARG_rst_in);
  INST_rf_24.reset_RST(ARG_rst_in);
  INST_rf_23.reset_RST(ARG_rst_in);
  INST_rf_22.reset_RST(ARG_rst_in);
  INST_rf_21.reset_RST(ARG_rst_in);
  INST_rf_20.reset_RST(ARG_rst_in);
  INST_rf_2.reset_RST(ARG_rst_in);
  INST_rf_19.reset_RST(ARG_rst_in);
  INST_rf_18.reset_RST(ARG_rst_in);
  INST_rf_17.reset_RST(ARG_rst_in);
  INST_rf_16.reset_RST(ARG_rst_in);
  INST_rf_15.reset_RST(ARG_rst_in);
  INST_rf_14.reset_RST(ARG_rst_in);
  INST_rf_13.reset_RST(ARG_rst_in);
  INST_rf_12.reset_RST(ARG_rst_in);
  INST_rf_11.reset_RST(ARG_rst_in);
  INST_rf_10.reset_RST(ARG_rst_in);
  INST_rf_1.reset_RST(ARG_rst_in);
  INST_rf_0.reset_RST(ARG_rst_in);
  INST_retired.reset_RST(ARG_rst_in);
  INST_pc.reset_RST(ARG_rst_in);
  INST_mem_business.reset_RST(ARG_rst_in);
  INST_lfh.reset_RST(ARG_rst_in);
  INST_fromMMIO_rv.reset_RST(ARG_rst_in);
  INST_fromImem_rv.reset_RST(ARG_rst_in);
  INST_fromDmem_rv.reset_RST(ARG_rst_in);
  INST_fresh_id.reset_RST(ARG_rst_in);
  INST_dInst.reset_RST(ARG_rst_in);
  INST_current_id.reset_RST(ARG_rst_in);
  INST_commit_id.reset_RST(ARG_rst_in);
}


/* Static handles to reset routines */


/* Functions for the parent module to register its reset fns */


/* Functions to set the elaborated clock id */

void MOD_mkmulticycle::set_clk_0(char const *s)
{
  __clk_handle_0 = bk_get_or_define_clock(sim_hdl, s);
}


/* State dumping routine */
void MOD_mkmulticycle::dump_state(unsigned int indent)
{
  printf("%*s%s:\n", indent, "", inst_name);
  INST_commit_id.dump_state(indent + 2u);
  INST_current_id.dump_state(indent + 2u);
  INST_dInst.dump_state(indent + 2u);
  INST_fresh_id.dump_state(indent + 2u);
  INST_fromDmem_rv.dump_state(indent + 2u);
  INST_fromImem_rv.dump_state(indent + 2u);
  INST_fromMMIO_rv.dump_state(indent + 2u);
  INST_lfh.dump_state(indent + 2u);
  INST_mem_business.dump_state(indent + 2u);
  INST_pc.dump_state(indent + 2u);
  INST_retired.dump_state(indent + 2u);
  INST_rf_0.dump_state(indent + 2u);
  INST_rf_1.dump_state(indent + 2u);
  INST_rf_10.dump_state(indent + 2u);
  INST_rf_11.dump_state(indent + 2u);
  INST_rf_12.dump_state(indent + 2u);
  INST_rf_13.dump_state(indent + 2u);
  INST_rf_14.dump_state(indent + 2u);
  INST_rf_15.dump_state(indent + 2u);
  INST_rf_16.dump_state(indent + 2u);
  INST_rf_17.dump_state(indent + 2u);
  INST_rf_18.dump_state(indent + 2u);
  INST_rf_19.dump_state(indent + 2u);
  INST_rf_2.dump_state(indent + 2u);
  INST_rf_20.dump_state(indent + 2u);
  INST_rf_21.dump_state(indent + 2u);
  INST_rf_22.dump_state(indent + 2u);
  INST_rf_23.dump_state(indent + 2u);
  INST_rf_24.dump_state(indent + 2u);
  INST_rf_25.dump_state(indent + 2u);
  INST_rf_26.dump_state(indent + 2u);
  INST_rf_27.dump_state(indent + 2u);
  INST_rf_28.dump_state(indent + 2u);
  INST_rf_29.dump_state(indent + 2u);
  INST_rf_3.dump_state(indent + 2u);
  INST_rf_30.dump_state(indent + 2u);
  INST_rf_31.dump_state(indent + 2u);
  INST_rf_4.dump_state(indent + 2u);
  INST_rf_5.dump_state(indent + 2u);
  INST_rf_6.dump_state(indent + 2u);
  INST_rf_7.dump_state(indent + 2u);
  INST_rf_8.dump_state(indent + 2u);
  INST_rf_9.dump_state(indent + 2u);
  INST_rv1.dump_state(indent + 2u);
  INST_rv2.dump_state(indent + 2u);
  INST_rvd.dump_state(indent + 2u);
  INST_squashed.dump_state(indent + 2u);
  INST_starting.dump_state(indent + 2u);
  INST_state.dump_state(indent + 2u);
  INST_toDmem_rv.dump_state(indent + 2u);
  INST_toImem_rv.dump_state(indent + 2u);
  INST_toMMIO_rv.dump_state(indent + 2u);
}


/* VCD dumping routines */

unsigned int MOD_mkmulticycle::dump_VCD_defs(unsigned int levels)
{
  vcd_write_scope_start(sim_hdl, inst_name);
  vcd_num = vcd_reserve_ids(sim_hdl, 117u);
  unsigned int num = vcd_num;
  for (unsigned int clk = 0u; clk < bk_num_clocks(sim_hdl); ++clk)
    vcd_add_clock_def(sim_hdl, this, bk_clock_name(sim_hdl, clk), bk_clock_vcd_num(sim_hdl, clk));
  vcd_write_def(sim_hdl, bk_clock_vcd_num(sim_hdl, __clk_handle_0), "CLK", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "IF_dInst_89_BIT_35_96_THEN_dInst_89_BITS_34_TO_ETC___d198", 3u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d254", 1u);
  vcd_write_def(sim_hdl, num++, "RST_N", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "TASK_fopen___d2", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_getDReq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_getDResp", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_getIReq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_getIResp", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_getMMIOReq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "WILL_FIRE_getMMIOResp", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_0_CONCAT_DONTCARE___d22", 69u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_16_CONCAT_pc_5_CONCAT_0___d16", 69u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_1_CONCAT_IF_dInst_89_BIT_5_56_THEN_IF_dInst_89_ETC___d274", 69u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_1_CONCAT_getDResp_a___d489", 69u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_1_CONCAT_getIResp_a___d485", 69u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "_1_CONCAT_getMMIOResp_a___d493", 69u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "dInst_89_BITS_11_TO_7_06_EQ_0___d367", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "dInst_89_BITS_11_TO_7___d206", 5u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "dInst_89_BITS_4_TO_3_91_EQ_0b0___d192", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "dInst_89_BIT_31___d211", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "dInst_89_BIT_35___d196", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "dInst_89_BIT_36___d365", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "dInst_89_BIT_6_90_OR_NOT_dInst_89_BITS_4_TO_3__ETC___d194", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "dInst_89_BIT_6___d190", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "dInst___d189", 40u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "fromDmem_rv_port0__read____d490", 69u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "fromDmem_rv_port1__read____d361", 69u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "fromImem_rv_port0__read____d486", 69u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "fromImem_rv_port1__read____d17", 69u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "fromMMIO_rv_port0__read____d494", 69u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "fromMMIO_rv_port1__read____d359", 69u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "imm__h8147", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "lfh___d3", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "mem_business_57_BITS_5_TO_3___d368", 3u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "mem_business_57_BIT_0___d358", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "mem_business___d357", 6u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "pc__h10072", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "rs1_val__h10070", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d235", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d236", 30u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "signed_0___d14", 32u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "starting__h4013", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "toDmem_rv_port0__read____d245", 69u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "toDmem_rv_port1__read____d488", 69u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "toImem_rv_port0__read____d4", 69u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "toImem_rv_port1__read____d484", 69u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "toMMIO_rv_port0__read____d242", 69u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "toMMIO_rv_port1__read____d492", 69u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h10689", 48u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h8347", 12u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h8394", 12u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h8463", 13u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "x__h8624", 21u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_getDReq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_getDResp", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_getIReq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_getIResp", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_getMMIOReq", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "EN_getMMIOResp", 1u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "getDReq", 68u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "getDResp_a", 68u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "getIReq", 68u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "getIResp_a", 68u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "getMMIOReq", 68u);
  vcd_set_clock(sim_hdl, num, __clk_handle_0);
  vcd_write_def(sim_hdl, num++, "getMMIOResp_a", 68u);
  num = INST_commit_id.dump_VCD_defs(num);
  num = INST_current_id.dump_VCD_defs(num);
  num = INST_dInst.dump_VCD_defs(num);
  num = INST_fresh_id.dump_VCD_defs(num);
  num = INST_fromDmem_rv.dump_VCD_defs(num);
  num = INST_fromImem_rv.dump_VCD_defs(num);
  num = INST_fromMMIO_rv.dump_VCD_defs(num);
  num = INST_lfh.dump_VCD_defs(num);
  num = INST_mem_business.dump_VCD_defs(num);
  num = INST_pc.dump_VCD_defs(num);
  num = INST_retired.dump_VCD_defs(num);
  num = INST_rf_0.dump_VCD_defs(num);
  num = INST_rf_1.dump_VCD_defs(num);
  num = INST_rf_10.dump_VCD_defs(num);
  num = INST_rf_11.dump_VCD_defs(num);
  num = INST_rf_12.dump_VCD_defs(num);
  num = INST_rf_13.dump_VCD_defs(num);
  num = INST_rf_14.dump_VCD_defs(num);
  num = INST_rf_15.dump_VCD_defs(num);
  num = INST_rf_16.dump_VCD_defs(num);
  num = INST_rf_17.dump_VCD_defs(num);
  num = INST_rf_18.dump_VCD_defs(num);
  num = INST_rf_19.dump_VCD_defs(num);
  num = INST_rf_2.dump_VCD_defs(num);
  num = INST_rf_20.dump_VCD_defs(num);
  num = INST_rf_21.dump_VCD_defs(num);
  num = INST_rf_22.dump_VCD_defs(num);
  num = INST_rf_23.dump_VCD_defs(num);
  num = INST_rf_24.dump_VCD_defs(num);
  num = INST_rf_25.dump_VCD_defs(num);
  num = INST_rf_26.dump_VCD_defs(num);
  num = INST_rf_27.dump_VCD_defs(num);
  num = INST_rf_28.dump_VCD_defs(num);
  num = INST_rf_29.dump_VCD_defs(num);
  num = INST_rf_3.dump_VCD_defs(num);
  num = INST_rf_30.dump_VCD_defs(num);
  num = INST_rf_31.dump_VCD_defs(num);
  num = INST_rf_4.dump_VCD_defs(num);
  num = INST_rf_5.dump_VCD_defs(num);
  num = INST_rf_6.dump_VCD_defs(num);
  num = INST_rf_7.dump_VCD_defs(num);
  num = INST_rf_8.dump_VCD_defs(num);
  num = INST_rf_9.dump_VCD_defs(num);
  num = INST_rv1.dump_VCD_defs(num);
  num = INST_rv2.dump_VCD_defs(num);
  num = INST_rvd.dump_VCD_defs(num);
  num = INST_squashed.dump_VCD_defs(num);
  num = INST_starting.dump_VCD_defs(num);
  num = INST_state.dump_VCD_defs(num);
  num = INST_toDmem_rv.dump_VCD_defs(num);
  num = INST_toImem_rv.dump_VCD_defs(num);
  num = INST_toMMIO_rv.dump_VCD_defs(num);
  vcd_write_scope_end(sim_hdl);
  return num;
}

void MOD_mkmulticycle::dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkmulticycle &backing)
{
  vcd_defs(dt, backing);
  vcd_prims(dt, backing);
}

void MOD_mkmulticycle::vcd_defs(tVCDDumpType dt, MOD_mkmulticycle &backing)
{
  unsigned int num = vcd_num;
  if (dt == VCD_DUMP_XS)
  {
    vcd_write_x(sim_hdl, num++, 3u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 69u);
    vcd_write_x(sim_hdl, num++, 69u);
    vcd_write_x(sim_hdl, num++, 69u);
    vcd_write_x(sim_hdl, num++, 69u);
    vcd_write_x(sim_hdl, num++, 69u);
    vcd_write_x(sim_hdl, num++, 69u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 5u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 40u);
    vcd_write_x(sim_hdl, num++, 69u);
    vcd_write_x(sim_hdl, num++, 69u);
    vcd_write_x(sim_hdl, num++, 69u);
    vcd_write_x(sim_hdl, num++, 69u);
    vcd_write_x(sim_hdl, num++, 69u);
    vcd_write_x(sim_hdl, num++, 69u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 3u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 6u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 30u);
    vcd_write_x(sim_hdl, num++, 32u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 69u);
    vcd_write_x(sim_hdl, num++, 69u);
    vcd_write_x(sim_hdl, num++, 69u);
    vcd_write_x(sim_hdl, num++, 69u);
    vcd_write_x(sim_hdl, num++, 69u);
    vcd_write_x(sim_hdl, num++, 69u);
    vcd_write_x(sim_hdl, num++, 48u);
    vcd_write_x(sim_hdl, num++, 12u);
    vcd_write_x(sim_hdl, num++, 12u);
    vcd_write_x(sim_hdl, num++, 13u);
    vcd_write_x(sim_hdl, num++, 21u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 1u);
    vcd_write_x(sim_hdl, num++, 68u);
    vcd_write_x(sim_hdl, num++, 68u);
    vcd_write_x(sim_hdl, num++, 68u);
    vcd_write_x(sim_hdl, num++, 68u);
    vcd_write_x(sim_hdl, num++, 68u);
    vcd_write_x(sim_hdl, num++, 68u);
  }
  else
    if (dt == VCD_DUMP_CHANGES)
    {
      if ((backing.DEF_IF_dInst_89_BIT_35_96_THEN_dInst_89_BITS_34_TO_ETC___d198) != DEF_IF_dInst_89_BIT_35_96_THEN_dInst_89_BITS_34_TO_ETC___d198)
      {
	vcd_write_val(sim_hdl, num, DEF_IF_dInst_89_BIT_35_96_THEN_dInst_89_BITS_34_TO_ETC___d198, 3u);
	backing.DEF_IF_dInst_89_BIT_35_96_THEN_dInst_89_BITS_34_TO_ETC___d198 = DEF_IF_dInst_89_BIT_35_96_THEN_dInst_89_BITS_34_TO_ETC___d198;
      }
      ++num;
      if ((backing.DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d254) != DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d254)
      {
	vcd_write_val(sim_hdl, num, DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d254, 1u);
	backing.DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d254 = DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d254;
      }
      ++num;
      if ((backing.PORT_RST_N) != PORT_RST_N)
      {
	vcd_write_val(sim_hdl, num, PORT_RST_N, 1u);
	backing.PORT_RST_N = PORT_RST_N;
      }
      ++num;
      if ((backing.DEF_TASK_fopen___d2) != DEF_TASK_fopen___d2)
      {
	vcd_write_val(sim_hdl, num, DEF_TASK_fopen___d2, 32u);
	backing.DEF_TASK_fopen___d2 = DEF_TASK_fopen___d2;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_getDReq) != DEF_WILL_FIRE_getDReq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_getDReq, 1u);
	backing.DEF_WILL_FIRE_getDReq = DEF_WILL_FIRE_getDReq;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_getDResp) != DEF_WILL_FIRE_getDResp)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_getDResp, 1u);
	backing.DEF_WILL_FIRE_getDResp = DEF_WILL_FIRE_getDResp;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_getIReq) != DEF_WILL_FIRE_getIReq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_getIReq, 1u);
	backing.DEF_WILL_FIRE_getIReq = DEF_WILL_FIRE_getIReq;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_getIResp) != DEF_WILL_FIRE_getIResp)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_getIResp, 1u);
	backing.DEF_WILL_FIRE_getIResp = DEF_WILL_FIRE_getIResp;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_getMMIOReq) != DEF_WILL_FIRE_getMMIOReq)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_getMMIOReq, 1u);
	backing.DEF_WILL_FIRE_getMMIOReq = DEF_WILL_FIRE_getMMIOReq;
      }
      ++num;
      if ((backing.DEF_WILL_FIRE_getMMIOResp) != DEF_WILL_FIRE_getMMIOResp)
      {
	vcd_write_val(sim_hdl, num, DEF_WILL_FIRE_getMMIOResp, 1u);
	backing.DEF_WILL_FIRE_getMMIOResp = DEF_WILL_FIRE_getMMIOResp;
      }
      ++num;
      if ((backing.DEF__0_CONCAT_DONTCARE___d22) != DEF__0_CONCAT_DONTCARE___d22)
      {
	vcd_write_val(sim_hdl, num, DEF__0_CONCAT_DONTCARE___d22, 69u);
	backing.DEF__0_CONCAT_DONTCARE___d22 = DEF__0_CONCAT_DONTCARE___d22;
      }
      ++num;
      if ((backing.DEF__16_CONCAT_pc_5_CONCAT_0___d16) != DEF__16_CONCAT_pc_5_CONCAT_0___d16)
      {
	vcd_write_val(sim_hdl, num, DEF__16_CONCAT_pc_5_CONCAT_0___d16, 69u);
	backing.DEF__16_CONCAT_pc_5_CONCAT_0___d16 = DEF__16_CONCAT_pc_5_CONCAT_0___d16;
      }
      ++num;
      if ((backing.DEF__1_CONCAT_IF_dInst_89_BIT_5_56_THEN_IF_dInst_89_ETC___d274) != DEF__1_CONCAT_IF_dInst_89_BIT_5_56_THEN_IF_dInst_89_ETC___d274)
      {
	vcd_write_val(sim_hdl, num, DEF__1_CONCAT_IF_dInst_89_BIT_5_56_THEN_IF_dInst_89_ETC___d274, 69u);
	backing.DEF__1_CONCAT_IF_dInst_89_BIT_5_56_THEN_IF_dInst_89_ETC___d274 = DEF__1_CONCAT_IF_dInst_89_BIT_5_56_THEN_IF_dInst_89_ETC___d274;
      }
      ++num;
      if ((backing.DEF__1_CONCAT_getDResp_a___d489) != DEF__1_CONCAT_getDResp_a___d489)
      {
	vcd_write_val(sim_hdl, num, DEF__1_CONCAT_getDResp_a___d489, 69u);
	backing.DEF__1_CONCAT_getDResp_a___d489 = DEF__1_CONCAT_getDResp_a___d489;
      }
      ++num;
      if ((backing.DEF__1_CONCAT_getIResp_a___d485) != DEF__1_CONCAT_getIResp_a___d485)
      {
	vcd_write_val(sim_hdl, num, DEF__1_CONCAT_getIResp_a___d485, 69u);
	backing.DEF__1_CONCAT_getIResp_a___d485 = DEF__1_CONCAT_getIResp_a___d485;
      }
      ++num;
      if ((backing.DEF__1_CONCAT_getMMIOResp_a___d493) != DEF__1_CONCAT_getMMIOResp_a___d493)
      {
	vcd_write_val(sim_hdl, num, DEF__1_CONCAT_getMMIOResp_a___d493, 69u);
	backing.DEF__1_CONCAT_getMMIOResp_a___d493 = DEF__1_CONCAT_getMMIOResp_a___d493;
      }
      ++num;
      if ((backing.DEF_dInst_89_BITS_11_TO_7_06_EQ_0___d367) != DEF_dInst_89_BITS_11_TO_7_06_EQ_0___d367)
      {
	vcd_write_val(sim_hdl, num, DEF_dInst_89_BITS_11_TO_7_06_EQ_0___d367, 1u);
	backing.DEF_dInst_89_BITS_11_TO_7_06_EQ_0___d367 = DEF_dInst_89_BITS_11_TO_7_06_EQ_0___d367;
      }
      ++num;
      if ((backing.DEF_dInst_89_BITS_11_TO_7___d206) != DEF_dInst_89_BITS_11_TO_7___d206)
      {
	vcd_write_val(sim_hdl, num, DEF_dInst_89_BITS_11_TO_7___d206, 5u);
	backing.DEF_dInst_89_BITS_11_TO_7___d206 = DEF_dInst_89_BITS_11_TO_7___d206;
      }
      ++num;
      if ((backing.DEF_dInst_89_BITS_4_TO_3_91_EQ_0b0___d192) != DEF_dInst_89_BITS_4_TO_3_91_EQ_0b0___d192)
      {
	vcd_write_val(sim_hdl, num, DEF_dInst_89_BITS_4_TO_3_91_EQ_0b0___d192, 1u);
	backing.DEF_dInst_89_BITS_4_TO_3_91_EQ_0b0___d192 = DEF_dInst_89_BITS_4_TO_3_91_EQ_0b0___d192;
      }
      ++num;
      if ((backing.DEF_dInst_89_BIT_31___d211) != DEF_dInst_89_BIT_31___d211)
      {
	vcd_write_val(sim_hdl, num, DEF_dInst_89_BIT_31___d211, 1u);
	backing.DEF_dInst_89_BIT_31___d211 = DEF_dInst_89_BIT_31___d211;
      }
      ++num;
      if ((backing.DEF_dInst_89_BIT_35___d196) != DEF_dInst_89_BIT_35___d196)
      {
	vcd_write_val(sim_hdl, num, DEF_dInst_89_BIT_35___d196, 1u);
	backing.DEF_dInst_89_BIT_35___d196 = DEF_dInst_89_BIT_35___d196;
      }
      ++num;
      if ((backing.DEF_dInst_89_BIT_36___d365) != DEF_dInst_89_BIT_36___d365)
      {
	vcd_write_val(sim_hdl, num, DEF_dInst_89_BIT_36___d365, 1u);
	backing.DEF_dInst_89_BIT_36___d365 = DEF_dInst_89_BIT_36___d365;
      }
      ++num;
      if ((backing.DEF_dInst_89_BIT_6_90_OR_NOT_dInst_89_BITS_4_TO_3__ETC___d194) != DEF_dInst_89_BIT_6_90_OR_NOT_dInst_89_BITS_4_TO_3__ETC___d194)
      {
	vcd_write_val(sim_hdl, num, DEF_dInst_89_BIT_6_90_OR_NOT_dInst_89_BITS_4_TO_3__ETC___d194, 1u);
	backing.DEF_dInst_89_BIT_6_90_OR_NOT_dInst_89_BITS_4_TO_3__ETC___d194 = DEF_dInst_89_BIT_6_90_OR_NOT_dInst_89_BITS_4_TO_3__ETC___d194;
      }
      ++num;
      if ((backing.DEF_dInst_89_BIT_6___d190) != DEF_dInst_89_BIT_6___d190)
      {
	vcd_write_val(sim_hdl, num, DEF_dInst_89_BIT_6___d190, 1u);
	backing.DEF_dInst_89_BIT_6___d190 = DEF_dInst_89_BIT_6___d190;
      }
      ++num;
      if ((backing.DEF_dInst___d189) != DEF_dInst___d189)
      {
	vcd_write_val(sim_hdl, num, DEF_dInst___d189, 40u);
	backing.DEF_dInst___d189 = DEF_dInst___d189;
      }
      ++num;
      if ((backing.DEF_fromDmem_rv_port0__read____d490) != DEF_fromDmem_rv_port0__read____d490)
      {
	vcd_write_val(sim_hdl, num, DEF_fromDmem_rv_port0__read____d490, 69u);
	backing.DEF_fromDmem_rv_port0__read____d490 = DEF_fromDmem_rv_port0__read____d490;
      }
      ++num;
      if ((backing.DEF_fromDmem_rv_port1__read____d361) != DEF_fromDmem_rv_port1__read____d361)
      {
	vcd_write_val(sim_hdl, num, DEF_fromDmem_rv_port1__read____d361, 69u);
	backing.DEF_fromDmem_rv_port1__read____d361 = DEF_fromDmem_rv_port1__read____d361;
      }
      ++num;
      if ((backing.DEF_fromImem_rv_port0__read____d486) != DEF_fromImem_rv_port0__read____d486)
      {
	vcd_write_val(sim_hdl, num, DEF_fromImem_rv_port0__read____d486, 69u);
	backing.DEF_fromImem_rv_port0__read____d486 = DEF_fromImem_rv_port0__read____d486;
      }
      ++num;
      if ((backing.DEF_fromImem_rv_port1__read____d17) != DEF_fromImem_rv_port1__read____d17)
      {
	vcd_write_val(sim_hdl, num, DEF_fromImem_rv_port1__read____d17, 69u);
	backing.DEF_fromImem_rv_port1__read____d17 = DEF_fromImem_rv_port1__read____d17;
      }
      ++num;
      if ((backing.DEF_fromMMIO_rv_port0__read____d494) != DEF_fromMMIO_rv_port0__read____d494)
      {
	vcd_write_val(sim_hdl, num, DEF_fromMMIO_rv_port0__read____d494, 69u);
	backing.DEF_fromMMIO_rv_port0__read____d494 = DEF_fromMMIO_rv_port0__read____d494;
      }
      ++num;
      if ((backing.DEF_fromMMIO_rv_port1__read____d359) != DEF_fromMMIO_rv_port1__read____d359)
      {
	vcd_write_val(sim_hdl, num, DEF_fromMMIO_rv_port1__read____d359, 69u);
	backing.DEF_fromMMIO_rv_port1__read____d359 = DEF_fromMMIO_rv_port1__read____d359;
      }
      ++num;
      if ((backing.DEF_imm__h8147) != DEF_imm__h8147)
      {
	vcd_write_val(sim_hdl, num, DEF_imm__h8147, 32u);
	backing.DEF_imm__h8147 = DEF_imm__h8147;
      }
      ++num;
      if ((backing.DEF_lfh___d3) != DEF_lfh___d3)
      {
	vcd_write_val(sim_hdl, num, DEF_lfh___d3, 32u);
	backing.DEF_lfh___d3 = DEF_lfh___d3;
      }
      ++num;
      if ((backing.DEF_mem_business_57_BITS_5_TO_3___d368) != DEF_mem_business_57_BITS_5_TO_3___d368)
      {
	vcd_write_val(sim_hdl, num, DEF_mem_business_57_BITS_5_TO_3___d368, 3u);
	backing.DEF_mem_business_57_BITS_5_TO_3___d368 = DEF_mem_business_57_BITS_5_TO_3___d368;
      }
      ++num;
      if ((backing.DEF_mem_business_57_BIT_0___d358) != DEF_mem_business_57_BIT_0___d358)
      {
	vcd_write_val(sim_hdl, num, DEF_mem_business_57_BIT_0___d358, 1u);
	backing.DEF_mem_business_57_BIT_0___d358 = DEF_mem_business_57_BIT_0___d358;
      }
      ++num;
      if ((backing.DEF_mem_business___d357) != DEF_mem_business___d357)
      {
	vcd_write_val(sim_hdl, num, DEF_mem_business___d357, 6u);
	backing.DEF_mem_business___d357 = DEF_mem_business___d357;
      }
      ++num;
      if ((backing.DEF_pc__h10072) != DEF_pc__h10072)
      {
	vcd_write_val(sim_hdl, num, DEF_pc__h10072, 32u);
	backing.DEF_pc__h10072 = DEF_pc__h10072;
      }
      ++num;
      if ((backing.DEF_rs1_val__h10070) != DEF_rs1_val__h10070)
      {
	vcd_write_val(sim_hdl, num, DEF_rs1_val__h10070, 32u);
	backing.DEF_rs1_val__h10070 = DEF_rs1_val__h10070;
      }
      ++num;
      if ((backing.DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d235) != DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d235)
      {
	vcd_write_val(sim_hdl, num, DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d235, 32u);
	backing.DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d235 = DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d235;
      }
      ++num;
      if ((backing.DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d236) != DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d236)
      {
	vcd_write_val(sim_hdl, num, DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d236, 30u);
	backing.DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d236 = DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d236;
      }
      ++num;
      if ((backing.DEF_signed_0___d14) != DEF_signed_0___d14)
      {
	vcd_write_val(sim_hdl, num, DEF_signed_0___d14, 32u);
	backing.DEF_signed_0___d14 = DEF_signed_0___d14;
      }
      ++num;
      if ((backing.DEF_starting__h4013) != DEF_starting__h4013)
      {
	vcd_write_val(sim_hdl, num, DEF_starting__h4013, 1u);
	backing.DEF_starting__h4013 = DEF_starting__h4013;
      }
      ++num;
      if ((backing.DEF_toDmem_rv_port0__read____d245) != DEF_toDmem_rv_port0__read____d245)
      {
	vcd_write_val(sim_hdl, num, DEF_toDmem_rv_port0__read____d245, 69u);
	backing.DEF_toDmem_rv_port0__read____d245 = DEF_toDmem_rv_port0__read____d245;
      }
      ++num;
      if ((backing.DEF_toDmem_rv_port1__read____d488) != DEF_toDmem_rv_port1__read____d488)
      {
	vcd_write_val(sim_hdl, num, DEF_toDmem_rv_port1__read____d488, 69u);
	backing.DEF_toDmem_rv_port1__read____d488 = DEF_toDmem_rv_port1__read____d488;
      }
      ++num;
      if ((backing.DEF_toImem_rv_port0__read____d4) != DEF_toImem_rv_port0__read____d4)
      {
	vcd_write_val(sim_hdl, num, DEF_toImem_rv_port0__read____d4, 69u);
	backing.DEF_toImem_rv_port0__read____d4 = DEF_toImem_rv_port0__read____d4;
      }
      ++num;
      if ((backing.DEF_toImem_rv_port1__read____d484) != DEF_toImem_rv_port1__read____d484)
      {
	vcd_write_val(sim_hdl, num, DEF_toImem_rv_port1__read____d484, 69u);
	backing.DEF_toImem_rv_port1__read____d484 = DEF_toImem_rv_port1__read____d484;
      }
      ++num;
      if ((backing.DEF_toMMIO_rv_port0__read____d242) != DEF_toMMIO_rv_port0__read____d242)
      {
	vcd_write_val(sim_hdl, num, DEF_toMMIO_rv_port0__read____d242, 69u);
	backing.DEF_toMMIO_rv_port0__read____d242 = DEF_toMMIO_rv_port0__read____d242;
      }
      ++num;
      if ((backing.DEF_toMMIO_rv_port1__read____d492) != DEF_toMMIO_rv_port1__read____d492)
      {
	vcd_write_val(sim_hdl, num, DEF_toMMIO_rv_port1__read____d492, 69u);
	backing.DEF_toMMIO_rv_port1__read____d492 = DEF_toMMIO_rv_port1__read____d492;
      }
      ++num;
      if ((backing.DEF_x__h10689) != DEF_x__h10689)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h10689, 48u);
	backing.DEF_x__h10689 = DEF_x__h10689;
      }
      ++num;
      if ((backing.DEF_x__h8347) != DEF_x__h8347)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h8347, 12u);
	backing.DEF_x__h8347 = DEF_x__h8347;
      }
      ++num;
      if ((backing.DEF_x__h8394) != DEF_x__h8394)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h8394, 12u);
	backing.DEF_x__h8394 = DEF_x__h8394;
      }
      ++num;
      if ((backing.DEF_x__h8463) != DEF_x__h8463)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h8463, 13u);
	backing.DEF_x__h8463 = DEF_x__h8463;
      }
      ++num;
      if ((backing.DEF_x__h8624) != DEF_x__h8624)
      {
	vcd_write_val(sim_hdl, num, DEF_x__h8624, 21u);
	backing.DEF_x__h8624 = DEF_x__h8624;
      }
      ++num;
      if ((backing.PORT_EN_getDReq) != PORT_EN_getDReq)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_getDReq, 1u);
	backing.PORT_EN_getDReq = PORT_EN_getDReq;
      }
      ++num;
      if ((backing.PORT_EN_getDResp) != PORT_EN_getDResp)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_getDResp, 1u);
	backing.PORT_EN_getDResp = PORT_EN_getDResp;
      }
      ++num;
      if ((backing.PORT_EN_getIReq) != PORT_EN_getIReq)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_getIReq, 1u);
	backing.PORT_EN_getIReq = PORT_EN_getIReq;
      }
      ++num;
      if ((backing.PORT_EN_getIResp) != PORT_EN_getIResp)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_getIResp, 1u);
	backing.PORT_EN_getIResp = PORT_EN_getIResp;
      }
      ++num;
      if ((backing.PORT_EN_getMMIOReq) != PORT_EN_getMMIOReq)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_getMMIOReq, 1u);
	backing.PORT_EN_getMMIOReq = PORT_EN_getMMIOReq;
      }
      ++num;
      if ((backing.PORT_EN_getMMIOResp) != PORT_EN_getMMIOResp)
      {
	vcd_write_val(sim_hdl, num, PORT_EN_getMMIOResp, 1u);
	backing.PORT_EN_getMMIOResp = PORT_EN_getMMIOResp;
      }
      ++num;
      if ((backing.PORT_getDReq) != PORT_getDReq)
      {
	vcd_write_val(sim_hdl, num, PORT_getDReq, 68u);
	backing.PORT_getDReq = PORT_getDReq;
      }
      ++num;
      if ((backing.PORT_getDResp_a) != PORT_getDResp_a)
      {
	vcd_write_val(sim_hdl, num, PORT_getDResp_a, 68u);
	backing.PORT_getDResp_a = PORT_getDResp_a;
      }
      ++num;
      if ((backing.PORT_getIReq) != PORT_getIReq)
      {
	vcd_write_val(sim_hdl, num, PORT_getIReq, 68u);
	backing.PORT_getIReq = PORT_getIReq;
      }
      ++num;
      if ((backing.PORT_getIResp_a) != PORT_getIResp_a)
      {
	vcd_write_val(sim_hdl, num, PORT_getIResp_a, 68u);
	backing.PORT_getIResp_a = PORT_getIResp_a;
      }
      ++num;
      if ((backing.PORT_getMMIOReq) != PORT_getMMIOReq)
      {
	vcd_write_val(sim_hdl, num, PORT_getMMIOReq, 68u);
	backing.PORT_getMMIOReq = PORT_getMMIOReq;
      }
      ++num;
      if ((backing.PORT_getMMIOResp_a) != PORT_getMMIOResp_a)
      {
	vcd_write_val(sim_hdl, num, PORT_getMMIOResp_a, 68u);
	backing.PORT_getMMIOResp_a = PORT_getMMIOResp_a;
      }
      ++num;
    }
    else
    {
      vcd_write_val(sim_hdl, num++, DEF_IF_dInst_89_BIT_35_96_THEN_dInst_89_BITS_34_TO_ETC___d198, 3u);
      backing.DEF_IF_dInst_89_BIT_35_96_THEN_dInst_89_BITS_34_TO_ETC___d198 = DEF_IF_dInst_89_BIT_35_96_THEN_dInst_89_BITS_34_TO_ETC___d198;
      vcd_write_val(sim_hdl, num++, DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d254, 1u);
      backing.DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d254 = DEF_NOT_dInst_89_BIT_6_90_53_AND_dInst_89_BITS_4_T_ETC___d254;
      vcd_write_val(sim_hdl, num++, PORT_RST_N, 1u);
      backing.PORT_RST_N = PORT_RST_N;
      vcd_write_val(sim_hdl, num++, DEF_TASK_fopen___d2, 32u);
      backing.DEF_TASK_fopen___d2 = DEF_TASK_fopen___d2;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_getDReq, 1u);
      backing.DEF_WILL_FIRE_getDReq = DEF_WILL_FIRE_getDReq;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_getDResp, 1u);
      backing.DEF_WILL_FIRE_getDResp = DEF_WILL_FIRE_getDResp;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_getIReq, 1u);
      backing.DEF_WILL_FIRE_getIReq = DEF_WILL_FIRE_getIReq;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_getIResp, 1u);
      backing.DEF_WILL_FIRE_getIResp = DEF_WILL_FIRE_getIResp;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_getMMIOReq, 1u);
      backing.DEF_WILL_FIRE_getMMIOReq = DEF_WILL_FIRE_getMMIOReq;
      vcd_write_val(sim_hdl, num++, DEF_WILL_FIRE_getMMIOResp, 1u);
      backing.DEF_WILL_FIRE_getMMIOResp = DEF_WILL_FIRE_getMMIOResp;
      vcd_write_val(sim_hdl, num++, DEF__0_CONCAT_DONTCARE___d22, 69u);
      backing.DEF__0_CONCAT_DONTCARE___d22 = DEF__0_CONCAT_DONTCARE___d22;
      vcd_write_val(sim_hdl, num++, DEF__16_CONCAT_pc_5_CONCAT_0___d16, 69u);
      backing.DEF__16_CONCAT_pc_5_CONCAT_0___d16 = DEF__16_CONCAT_pc_5_CONCAT_0___d16;
      vcd_write_val(sim_hdl, num++, DEF__1_CONCAT_IF_dInst_89_BIT_5_56_THEN_IF_dInst_89_ETC___d274, 69u);
      backing.DEF__1_CONCAT_IF_dInst_89_BIT_5_56_THEN_IF_dInst_89_ETC___d274 = DEF__1_CONCAT_IF_dInst_89_BIT_5_56_THEN_IF_dInst_89_ETC___d274;
      vcd_write_val(sim_hdl, num++, DEF__1_CONCAT_getDResp_a___d489, 69u);
      backing.DEF__1_CONCAT_getDResp_a___d489 = DEF__1_CONCAT_getDResp_a___d489;
      vcd_write_val(sim_hdl, num++, DEF__1_CONCAT_getIResp_a___d485, 69u);
      backing.DEF__1_CONCAT_getIResp_a___d485 = DEF__1_CONCAT_getIResp_a___d485;
      vcd_write_val(sim_hdl, num++, DEF__1_CONCAT_getMMIOResp_a___d493, 69u);
      backing.DEF__1_CONCAT_getMMIOResp_a___d493 = DEF__1_CONCAT_getMMIOResp_a___d493;
      vcd_write_val(sim_hdl, num++, DEF_dInst_89_BITS_11_TO_7_06_EQ_0___d367, 1u);
      backing.DEF_dInst_89_BITS_11_TO_7_06_EQ_0___d367 = DEF_dInst_89_BITS_11_TO_7_06_EQ_0___d367;
      vcd_write_val(sim_hdl, num++, DEF_dInst_89_BITS_11_TO_7___d206, 5u);
      backing.DEF_dInst_89_BITS_11_TO_7___d206 = DEF_dInst_89_BITS_11_TO_7___d206;
      vcd_write_val(sim_hdl, num++, DEF_dInst_89_BITS_4_TO_3_91_EQ_0b0___d192, 1u);
      backing.DEF_dInst_89_BITS_4_TO_3_91_EQ_0b0___d192 = DEF_dInst_89_BITS_4_TO_3_91_EQ_0b0___d192;
      vcd_write_val(sim_hdl, num++, DEF_dInst_89_BIT_31___d211, 1u);
      backing.DEF_dInst_89_BIT_31___d211 = DEF_dInst_89_BIT_31___d211;
      vcd_write_val(sim_hdl, num++, DEF_dInst_89_BIT_35___d196, 1u);
      backing.DEF_dInst_89_BIT_35___d196 = DEF_dInst_89_BIT_35___d196;
      vcd_write_val(sim_hdl, num++, DEF_dInst_89_BIT_36___d365, 1u);
      backing.DEF_dInst_89_BIT_36___d365 = DEF_dInst_89_BIT_36___d365;
      vcd_write_val(sim_hdl, num++, DEF_dInst_89_BIT_6_90_OR_NOT_dInst_89_BITS_4_TO_3__ETC___d194, 1u);
      backing.DEF_dInst_89_BIT_6_90_OR_NOT_dInst_89_BITS_4_TO_3__ETC___d194 = DEF_dInst_89_BIT_6_90_OR_NOT_dInst_89_BITS_4_TO_3__ETC___d194;
      vcd_write_val(sim_hdl, num++, DEF_dInst_89_BIT_6___d190, 1u);
      backing.DEF_dInst_89_BIT_6___d190 = DEF_dInst_89_BIT_6___d190;
      vcd_write_val(sim_hdl, num++, DEF_dInst___d189, 40u);
      backing.DEF_dInst___d189 = DEF_dInst___d189;
      vcd_write_val(sim_hdl, num++, DEF_fromDmem_rv_port0__read____d490, 69u);
      backing.DEF_fromDmem_rv_port0__read____d490 = DEF_fromDmem_rv_port0__read____d490;
      vcd_write_val(sim_hdl, num++, DEF_fromDmem_rv_port1__read____d361, 69u);
      backing.DEF_fromDmem_rv_port1__read____d361 = DEF_fromDmem_rv_port1__read____d361;
      vcd_write_val(sim_hdl, num++, DEF_fromImem_rv_port0__read____d486, 69u);
      backing.DEF_fromImem_rv_port0__read____d486 = DEF_fromImem_rv_port0__read____d486;
      vcd_write_val(sim_hdl, num++, DEF_fromImem_rv_port1__read____d17, 69u);
      backing.DEF_fromImem_rv_port1__read____d17 = DEF_fromImem_rv_port1__read____d17;
      vcd_write_val(sim_hdl, num++, DEF_fromMMIO_rv_port0__read____d494, 69u);
      backing.DEF_fromMMIO_rv_port0__read____d494 = DEF_fromMMIO_rv_port0__read____d494;
      vcd_write_val(sim_hdl, num++, DEF_fromMMIO_rv_port1__read____d359, 69u);
      backing.DEF_fromMMIO_rv_port1__read____d359 = DEF_fromMMIO_rv_port1__read____d359;
      vcd_write_val(sim_hdl, num++, DEF_imm__h8147, 32u);
      backing.DEF_imm__h8147 = DEF_imm__h8147;
      vcd_write_val(sim_hdl, num++, DEF_lfh___d3, 32u);
      backing.DEF_lfh___d3 = DEF_lfh___d3;
      vcd_write_val(sim_hdl, num++, DEF_mem_business_57_BITS_5_TO_3___d368, 3u);
      backing.DEF_mem_business_57_BITS_5_TO_3___d368 = DEF_mem_business_57_BITS_5_TO_3___d368;
      vcd_write_val(sim_hdl, num++, DEF_mem_business_57_BIT_0___d358, 1u);
      backing.DEF_mem_business_57_BIT_0___d358 = DEF_mem_business_57_BIT_0___d358;
      vcd_write_val(sim_hdl, num++, DEF_mem_business___d357, 6u);
      backing.DEF_mem_business___d357 = DEF_mem_business___d357;
      vcd_write_val(sim_hdl, num++, DEF_pc__h10072, 32u);
      backing.DEF_pc__h10072 = DEF_pc__h10072;
      vcd_write_val(sim_hdl, num++, DEF_rs1_val__h10070, 32u);
      backing.DEF_rs1_val__h10070 = DEF_rs1_val__h10070;
      vcd_write_val(sim_hdl, num++, DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d235, 32u);
      backing.DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d235 = DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d235;
      vcd_write_val(sim_hdl, num++, DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d236, 30u);
      backing.DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d236 = DEF_rv1_95_PLUS_IF_dInst_89_BIT_35_96_AND_IF_dInst_ETC___d236;
      vcd_write_val(sim_hdl, num++, DEF_signed_0___d14, 32u);
      backing.DEF_signed_0___d14 = DEF_signed_0___d14;
      vcd_write_val(sim_hdl, num++, DEF_starting__h4013, 1u);
      backing.DEF_starting__h4013 = DEF_starting__h4013;
      vcd_write_val(sim_hdl, num++, DEF_toDmem_rv_port0__read____d245, 69u);
      backing.DEF_toDmem_rv_port0__read____d245 = DEF_toDmem_rv_port0__read____d245;
      vcd_write_val(sim_hdl, num++, DEF_toDmem_rv_port1__read____d488, 69u);
      backing.DEF_toDmem_rv_port1__read____d488 = DEF_toDmem_rv_port1__read____d488;
      vcd_write_val(sim_hdl, num++, DEF_toImem_rv_port0__read____d4, 69u);
      backing.DEF_toImem_rv_port0__read____d4 = DEF_toImem_rv_port0__read____d4;
      vcd_write_val(sim_hdl, num++, DEF_toImem_rv_port1__read____d484, 69u);
      backing.DEF_toImem_rv_port1__read____d484 = DEF_toImem_rv_port1__read____d484;
      vcd_write_val(sim_hdl, num++, DEF_toMMIO_rv_port0__read____d242, 69u);
      backing.DEF_toMMIO_rv_port0__read____d242 = DEF_toMMIO_rv_port0__read____d242;
      vcd_write_val(sim_hdl, num++, DEF_toMMIO_rv_port1__read____d492, 69u);
      backing.DEF_toMMIO_rv_port1__read____d492 = DEF_toMMIO_rv_port1__read____d492;
      vcd_write_val(sim_hdl, num++, DEF_x__h10689, 48u);
      backing.DEF_x__h10689 = DEF_x__h10689;
      vcd_write_val(sim_hdl, num++, DEF_x__h8347, 12u);
      backing.DEF_x__h8347 = DEF_x__h8347;
      vcd_write_val(sim_hdl, num++, DEF_x__h8394, 12u);
      backing.DEF_x__h8394 = DEF_x__h8394;
      vcd_write_val(sim_hdl, num++, DEF_x__h8463, 13u);
      backing.DEF_x__h8463 = DEF_x__h8463;
      vcd_write_val(sim_hdl, num++, DEF_x__h8624, 21u);
      backing.DEF_x__h8624 = DEF_x__h8624;
      vcd_write_val(sim_hdl, num++, PORT_EN_getDReq, 1u);
      backing.PORT_EN_getDReq = PORT_EN_getDReq;
      vcd_write_val(sim_hdl, num++, PORT_EN_getDResp, 1u);
      backing.PORT_EN_getDResp = PORT_EN_getDResp;
      vcd_write_val(sim_hdl, num++, PORT_EN_getIReq, 1u);
      backing.PORT_EN_getIReq = PORT_EN_getIReq;
      vcd_write_val(sim_hdl, num++, PORT_EN_getIResp, 1u);
      backing.PORT_EN_getIResp = PORT_EN_getIResp;
      vcd_write_val(sim_hdl, num++, PORT_EN_getMMIOReq, 1u);
      backing.PORT_EN_getMMIOReq = PORT_EN_getMMIOReq;
      vcd_write_val(sim_hdl, num++, PORT_EN_getMMIOResp, 1u);
      backing.PORT_EN_getMMIOResp = PORT_EN_getMMIOResp;
      vcd_write_val(sim_hdl, num++, PORT_getDReq, 68u);
      backing.PORT_getDReq = PORT_getDReq;
      vcd_write_val(sim_hdl, num++, PORT_getDResp_a, 68u);
      backing.PORT_getDResp_a = PORT_getDResp_a;
      vcd_write_val(sim_hdl, num++, PORT_getIReq, 68u);
      backing.PORT_getIReq = PORT_getIReq;
      vcd_write_val(sim_hdl, num++, PORT_getIResp_a, 68u);
      backing.PORT_getIResp_a = PORT_getIResp_a;
      vcd_write_val(sim_hdl, num++, PORT_getMMIOReq, 68u);
      backing.PORT_getMMIOReq = PORT_getMMIOReq;
      vcd_write_val(sim_hdl, num++, PORT_getMMIOResp_a, 68u);
      backing.PORT_getMMIOResp_a = PORT_getMMIOResp_a;
    }
}

void MOD_mkmulticycle::vcd_prims(tVCDDumpType dt, MOD_mkmulticycle &backing)
{
  INST_commit_id.dump_VCD(dt, backing.INST_commit_id);
  INST_current_id.dump_VCD(dt, backing.INST_current_id);
  INST_dInst.dump_VCD(dt, backing.INST_dInst);
  INST_fresh_id.dump_VCD(dt, backing.INST_fresh_id);
  INST_fromDmem_rv.dump_VCD(dt, backing.INST_fromDmem_rv);
  INST_fromImem_rv.dump_VCD(dt, backing.INST_fromImem_rv);
  INST_fromMMIO_rv.dump_VCD(dt, backing.INST_fromMMIO_rv);
  INST_lfh.dump_VCD(dt, backing.INST_lfh);
  INST_mem_business.dump_VCD(dt, backing.INST_mem_business);
  INST_pc.dump_VCD(dt, backing.INST_pc);
  INST_retired.dump_VCD(dt, backing.INST_retired);
  INST_rf_0.dump_VCD(dt, backing.INST_rf_0);
  INST_rf_1.dump_VCD(dt, backing.INST_rf_1);
  INST_rf_10.dump_VCD(dt, backing.INST_rf_10);
  INST_rf_11.dump_VCD(dt, backing.INST_rf_11);
  INST_rf_12.dump_VCD(dt, backing.INST_rf_12);
  INST_rf_13.dump_VCD(dt, backing.INST_rf_13);
  INST_rf_14.dump_VCD(dt, backing.INST_rf_14);
  INST_rf_15.dump_VCD(dt, backing.INST_rf_15);
  INST_rf_16.dump_VCD(dt, backing.INST_rf_16);
  INST_rf_17.dump_VCD(dt, backing.INST_rf_17);
  INST_rf_18.dump_VCD(dt, backing.INST_rf_18);
  INST_rf_19.dump_VCD(dt, backing.INST_rf_19);
  INST_rf_2.dump_VCD(dt, backing.INST_rf_2);
  INST_rf_20.dump_VCD(dt, backing.INST_rf_20);
  INST_rf_21.dump_VCD(dt, backing.INST_rf_21);
  INST_rf_22.dump_VCD(dt, backing.INST_rf_22);
  INST_rf_23.dump_VCD(dt, backing.INST_rf_23);
  INST_rf_24.dump_VCD(dt, backing.INST_rf_24);
  INST_rf_25.dump_VCD(dt, backing.INST_rf_25);
  INST_rf_26.dump_VCD(dt, backing.INST_rf_26);
  INST_rf_27.dump_VCD(dt, backing.INST_rf_27);
  INST_rf_28.dump_VCD(dt, backing.INST_rf_28);
  INST_rf_29.dump_VCD(dt, backing.INST_rf_29);
  INST_rf_3.dump_VCD(dt, backing.INST_rf_3);
  INST_rf_30.dump_VCD(dt, backing.INST_rf_30);
  INST_rf_31.dump_VCD(dt, backing.INST_rf_31);
  INST_rf_4.dump_VCD(dt, backing.INST_rf_4);
  INST_rf_5.dump_VCD(dt, backing.INST_rf_5);
  INST_rf_6.dump_VCD(dt, backing.INST_rf_6);
  INST_rf_7.dump_VCD(dt, backing.INST_rf_7);
  INST_rf_8.dump_VCD(dt, backing.INST_rf_8);
  INST_rf_9.dump_VCD(dt, backing.INST_rf_9);
  INST_rv1.dump_VCD(dt, backing.INST_rv1);
  INST_rv2.dump_VCD(dt, backing.INST_rv2);
  INST_rvd.dump_VCD(dt, backing.INST_rvd);
  INST_squashed.dump_VCD(dt, backing.INST_squashed);
  INST_starting.dump_VCD(dt, backing.INST_starting);
  INST_state.dump_VCD(dt, backing.INST_state);
  INST_toDmem_rv.dump_VCD(dt, backing.INST_toDmem_rv);
  INST_toImem_rv.dump_VCD(dt, backing.INST_toImem_rv);
  INST_toMMIO_rv.dump_VCD(dt, backing.INST_toMMIO_rv);
}
